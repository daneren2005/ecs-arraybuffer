{"version":3,"file":"js/multithreaded.6f110ca3.js","mappings":"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","sources":["webpack://ecs-arraybuffer/./src/multithreaded/constants.ts","webpack://ecs-arraybuffer/./src/multithreaded/entities/entity.ts","webpack://ecs-arraybuffer/./src/multithreaded/components/get-entities.ts","webpack://ecs-arraybuffer/./src/multithreaded/entities/station.ts","webpack://ecs-arraybuffer/./src/multithreaded/systems/spawn-ship-system.ts","webpack://ecs-arraybuffer/./src/multithreaded/systems/velocity-system.ts","webpack://ecs-arraybuffer/./src/multithreaded/systems/collision-system.ts","webpack://ecs-arraybuffer/./src/multithreaded/systems/update-health-timers-system.ts","webpack://ecs-arraybuffer/./src/multithreaded/systems/move-to-target-system.ts","webpack://ecs-arraybuffer/./src/multithreaded/systems/target-enemy-system.ts","webpack://ecs-arraybuffer/./src/multithreaded/entities/world.ts","webpack://ecs-arraybuffer/./node_modules/vue-loader/dist/index.js","webpack://ecs-arraybuffer/./src/multithreaded/MultithreadedGame.vue?9581","webpack://ecs-arraybuffer/./src/multithreaded/MultithreadedGame.vue?fe3c","webpack://ecs-arraybuffer/./src/multithreaded/MultithreadedGame.vue?a983","webpack://ecs-arraybuffer/./src/multithreaded/MultithreadedGame.vue"],"sourcesContent":["export const INT_FLOAT_MULTIPLIER = 1_000.0;","import { EventEmitter } from 'eventemitter3';\nimport { INT_FLOAT_MULTIPLIER } from '../constants';\nimport World from './world';\n\nexport default class Entity extends EventEmitter {\n\tworld: World;\n\teid: number;\n\n\t// Position\n\tget x()    { return this.world.components.position.x[this.eid]; }\n\tset x(val) { this.world.components.position.x[this.eid] = val; }\n\tget y()    { return this.world.components.position.y[this.eid]; }\n\tset y(val) { this.world.components.position.y[this.eid] = val; }\n\tget width()    { return this.world.components.position.width[this.eid]; }\n\tset width(val) { this.world.components.position.width[this.eid] = val; }\n\tget height()    { return this.world.components.position.height[this.eid]; }\n\tset height(val) { this.world.components.position.height[this.eid] = val; }\n\n\t// Health\n\tget shields()    { return this.world.components.health.shields[this.eid]; }\n\tset shields(val) { this.world.components.health.shields[this.eid] = val; }\n\tget maxShields()    { return this.world.components.health.maxShields[this.eid]; }\n\tset maxShields(val) { this.world.components.health.maxShields[this.eid] = val; }\n\tget timeToRegenerateShields()    { return this.world.components.health.timeToRegenerateShields[this.eid]; }\n\tset timeToRegenerateShields(val) { this.world.components.health.timeToRegenerateShields[this.eid] = val; }\n\tget timeSinceShieldRegeneration()    { return this.world.components.health.timeSinceShieldRegeneration[this.eid]; }\n\tset timeSinceShieldRegeneration(val) { this.world.components.health.timeSinceShieldRegeneration[this.eid] = val; }\n\tget timeSinceTakenDamage()    { return this.world.components.health.timeSinceTakenDamage[this.eid]; }\n\tset timeSinceTakenDamage(val) { this.world.components.health.timeSinceTakenDamage[this.eid] = val; }\n\tget dead()    { return this.world.components.health.shields[this.eid]; }\n\tset dead(val) { this.world.components.health.shields[this.eid] = val; }\n\n\ttype = 'entity';\n\tkey = 'boid';\n\n\tconstructor(world: World) {\n\t\tsuper();\n\t\tthis.eid = world.getId();\n\t\tthis.world = world;\n\n\t\tthis.shields = 1;\n\t\tthis.maxShields = 1;\n\t\tthis.timeToRegenerateShields = 1;\n\t\tthis.timeSinceShieldRegeneration = 0;\n\t\tthis.timeSinceTakenDamage = 0;\n\t\tthis.dead = 0;\n\t}\n\n\tload(config: any) {\n\t\t// TODO: Need a way which does not rely on manually setup get/set.  Maybe in our own system define how it is serialized as part of the component registration?\n\t\tObject.keys(config).forEach((key: string) => {\n\t\t\tif(key === 'x' || key === 'y') {\n\t\t\t\tthis[key] = config[key] * INT_FLOAT_MULTIPLIER;\n\t\t\t} else {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tthis[key] = config[key];\n\t\t\t}\n\t\t});\n\t}\n}","import WorldConfig from '../entities/world-config';\nimport Components from './components';\n\n// NOTE: All of these have to live in a single file in order to make sure that inlining them into the web worker doesn't try to reference dynamic __WEBPACK_IMPORT\n// Components and WorldConfig can live separately since they are just type hints that get stripped from the js code anyways\nexport function getEntitiesWithComponents(world: WorldConfig, types: Array<string>) {\n\tlet typeBits = getTypeBits(types);\n\n\tlet eids = [];\n\tlet currentCounter = Atomics.load(world.idCounter, 0);\n\tfor(let eid = 0; eid <= currentCounter; eid++) {\n\t\tif((Atomics.load(world.components.entity.components, eid) & typeBits) === typeBits && Atomics.load(world.components.entity.dead, eid) === 0) {\n\t\t\teids.push(eid);\n\t\t}\n\t}\n\n\treturn eids;\n}\n\nexport function getAllEntitiesWithComponents(world: WorldConfig, types: Array<string>) {\n\tlet typeBits = getTypeBits(types);\n\n\tlet eids = [];\n\tlet currentCounter = Atomics.load(world.idCounter, 0);\n\tfor(let eid = 0; eid <= currentCounter; eid++) {\n\t\tif((Atomics.load(world.components.entity.components, eid) & typeBits) === typeBits) {\n\t\t\teids.push(eid);\n\t\t}\n\t}\n\n\treturn eids;\n}\n\nexport function getTypeBit(type: string): number {\n\tswitch(type) {\n\t\tcase 'entity':\n\t\t\treturn 1;\n\t\tcase 'position':\n\t\t\treturn 2 ** 1;\n\t\tcase 'velocity':\n\t\t\treturn 2 ** 2;\n\t\tcase 'health':\n\t\t\treturn 2 ** 3;\n\t\tcase 'controller':\n\t\t\treturn 2 ** 4;\n\t\tcase 'controlled':\n\t\t\treturn 2 ** 5;\n\t\tcase 'attack':\n\t\t\treturn 2 ** 6;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\nexport function getTypeBits(types: Array<string>): number {\n\tlet typeBits = 0;\n\ttypes.forEach(type => {\n\t\ttypeBits |= getTypeBit(type);\n\t});\n\n\treturn typeBits;\n}\n\nexport function hasComponent(components: Components, eid: number, type: string) {\n\treturn (Atomics.load(components.entity.components, eid) & getTypeBit(type)) > 0;\n}\nexport function addComponents(components: Components, eid: number, types: Array<string>) {\n\tAtomics.or(components.entity.components, eid, getTypeBits(types));\n}","import { addComponents } from '../components/get-entities';\nimport { INT_FLOAT_MULTIPLIER } from '../constants';\nimport Entity from './entity';\nimport World from './world';\n\nexport default class Station extends Entity {\n\tget color()    { return this.world.components.controller.color[this.eid]; }\n\tset color(val) { this.world.components.controller.color[this.eid] = val; }\n\tget money()    { return this.world.components.controller.money[this.eid]; }\n\tset money(val) { this.world.components.controller.money[this.eid] = val; }\n\n\tconstructor(world: World) {\n\t\tsuper(world);\n\t\taddComponents(this.world.components, this.eid, ['entity', 'position', 'health', 'controller']);\n\n\t\tthis.key = 'station';\n\t\tthis.width = 20 * INT_FLOAT_MULTIPLIER;\n\t\tthis.height = 20 * INT_FLOAT_MULTIPLIER;\n\t\tthis.shields = 2;\n\t\tthis.maxShields = 2;\n\t\tthis.timeToRegenerateShields = 5_000 * INT_FLOAT_MULTIPLIER;\n\n\t\tAtomics.store(world.components.entity.init, this.eid, 1);\n\t}\n}","import Components from '../components/components';\nimport { addComponents, getEntitiesWithComponents } from '../components/get-entities';\nimport WorldConfig from '../entities/world-config';\n\nglobalThis.getEntitiesWithComponents = getEntitiesWithComponents;\nglobalThis.addComponents = addComponents;\n\nexport default function spawnShipSystem(world: WorldConfig) {\n\tconst controller = world.components.controller;\n\tconst controlled = world.components.controlled;\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tconst health = world.components.health;\n\n\treturn () => {\n\t\tconst SHIP_SPEED = 100;\n\t\tglobalThis.getEntitiesWithComponents(world, ['controller']).forEach(stationEid => {\n\t\t\tif(controller.money[stationEid] > 0) {\n\t\t\t\tlet shipEid = Atomics.add(world.idCounter, 0, 1) + 1;\n\t\t\t\tglobalThis.addComponents(world.components, shipEid, ['entity', 'position', 'health', 'velocity', 'controlled', 'attack']);\n\n\t\t\t\tAtomics.store(position.width, shipEid, 10 * 1_000);\n\t\t\t\tAtomics.store(position.height, shipEid, 5 * 1_000);\n\t\t\t\tAtomics.store(health.shields, shipEid, 1);\n\t\t\t\tAtomics.store(health.maxShields, shipEid, 1);\n\t\t\t\tAtomics.store(health.timeToRegenerateShields, shipEid, 1_000 * 1_000);\n\t\t\t\tAtomics.store(velocity.speed, shipEid, SHIP_SPEED);\n\t\t\t\tAtomics.store(controlled.owner, shipEid, stationEid);\n\n\t\t\t\tAtomics.store(position.x, shipEid, Atomics.load(position.x, stationEid));\n\t\t\t\tAtomics.store(position.y, shipEid, Atomics.load(position.y, stationEid));\n\n\t\t\t\tlet velocityX = (Math.random() > 0.5 ? -1 : 1) * Math.random() * SHIP_SPEED;\n\t\t\t\tlet velocityY = (Math.random() > 0.5 ? -1 : 1) * Math.random() * SHIP_SPEED;\n\t\t\t\tAtomics.store(velocity.x, shipEid, velocityX);\n\t\t\t\tAtomics.store(velocity.y, shipEid, velocityY);\n\t\t\t\tAtomics.store(position.angle, shipEid, computeAngle(velocityX, velocityY));\n\t\t\t\tAtomics.sub(controller.money, stationEid, 1);\n\t\t\t\tAtomics.store(world.components.entity.init, shipEid, 1);\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction computeAngle(x: number, y: number) {\n\t\tlet radians = Math.atan2(y, x);\n\t\treturn radians * (180 / Math.PI);\n\t}\n}\n\ndeclare global {\n\t// eslint-disable-next-line\n\tvar getEntitiesWithComponents: (world: any, types: Array<string>) => Array<number>;\n\t// eslint-disable-next-line\n\tvar addComponents: (components: Components, eid: number, types: Array<string>) => void;\n}","import { getEntitiesWithComponents } from '../components/get-entities';\nimport WorldConfig from '../entities/world-config';\n\nglobalThis.getEntitiesWithComponents = getEntitiesWithComponents;\n\nexport default function velocitySystem(world: WorldConfig) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\n\treturn (delta: number) => {\n\t\tlet ships = globalThis.getEntitiesWithComponents(world, ['position', 'velocity']);\n\t\tships.forEach(shipEid => {\n\t\t\tlet velocityX = Atomics.load(velocity.x, shipEid);\n\t\t\tlet velocityY = Atomics.load(velocity.y, shipEid);\n\t\t\tlet deltaVelocityX = velocityX * delta;\n\t\t\tlet deltaVelocityY = velocityY * delta;\n\t\t\tlet newPositionX = Atomics.add(position.x, shipEid, deltaVelocityX) + deltaVelocityX;\n\t\t\tlet newPositionY = Atomics.add(position.y, shipEid, deltaVelocityY) + deltaVelocityY;\n\n\t\t\tif(newPositionX < 0 || newPositionX > (world.bounds.width * 1_000)) {\n\t\t\t\tAtomics.store(velocity.x, shipEid, -velocityX);\n\t\t\t\tAtomics.store(position.angle, shipEid, computeAngle(-velocityX, velocityY));\n\t\t\t}\n\t\n\t\t\tif(newPositionY < 0 || newPositionY > (world.bounds.height * 1_000)) {\n\t\t\t\tAtomics.store(velocity.y, shipEid, -velocityY);\n\t\t\t\tAtomics.store(position.angle, shipEid, computeAngle(velocityX, -velocityY));\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction computeAngle(x: number, y: number) {\n\t\tlet radians = Math.atan2(y, x);\n\t\treturn radians * (180 / Math.PI);\n\t}\n}\n\ndeclare global {\n\t// eslint-disable-next-line\n\tvar getEntitiesWithComponents: (world: any, types: Array<string>) => Array<number>;\n}","import { Quadtree, Rectangle } from '@timohausmann/quadtree-ts/src/index.esm';\nimport { getEntitiesWithComponents, hasComponent } from '../components/get-entities';\nimport Components from '../components/components';\nimport WorldConfig from '../entities/world-config';\n\nglobalThis.getEntitiesWithComponents = getEntitiesWithComponents;\nglobalThis.hasComponent = hasComponent;\nglobalThis.Quadtree = Quadtree;\nglobalThis.Rectangle = Rectangle;\n\nexport default function collisionSystem(world: WorldConfig) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tconst controlled = world.components.controlled;\n\tconst controller = world.components.controller;\n\n\tif(globalThis.importScripts) {\n\t\tglobalThis.importScripts('https://cdn.jsdelivr.net/npm/@timohausmann/quadtree-ts/dist/quadtree.umd.full.js');\n\t\tglobalThis.Rectangle = globalThis.Quadtree.Rectangle;\n\t}\n\n\treturn () => {\n\t\t// Create and populate quadtree\n\t\tlet quadtree = new globalThis.Quadtree({\n\t\t\twidth: world.bounds.width * 1_000,\n\t\t\theight: world.bounds.height * 1_000\n\t\t});\n\t\tglobalThis.getEntitiesWithComponents(world, ['position', 'health']).forEach(eid => {\n\t\t\tquadtree.insert(new globalThis.Rectangle({\n\t\t\t\tx: Atomics.load(position.x, eid),\n\t\t\t\ty: Atomics.load(position.y, eid),\n\t\t\t\twidth: Atomics.load(position.width, eid),\n\t\t\t\theight: Atomics.load(position.height, eid),\n\t\t\t\tdata: {\n\t\t\t\t\teid\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\t// Use quadtree to see who we are colliding with\n\t\tlet ships = globalThis.getEntitiesWithComponents(world, ['velocity']);\n\t\tships.forEach(eid => {\n\t\t\tlet entitiesInRange = quadtree.retrieve(new globalThis.Rectangle({\n\t\t\t\tx: position.x[eid],\n\t\t\t\ty: position.y[eid],\n\t\t\t\twidth: position.width[eid],\n\t\t\t\theight: position.height[eid]\n\t\t\t})).map((result: any) => result.data.eid).filter((otherEid: number) => otherEid !== eid);\n\t\t\tlet shipColor = controller.color[controlled.owner[eid]];\n\t\t\tlet enemiesInRange = entitiesInRange.filter((otherEid: number) => {\n\t\t\t\t// Ship\n\t\t\t\tif(globalThis.hasComponent(world.components, otherEid, 'controlled')) {\n\t\t\t\t\tlet stationEid = controlled.owner[otherEid];\n\t\t\t\t\treturn controller.color[stationEid] !== shipColor;\n\t\t\t\t}\n\t\t\t\t// Station\n\t\t\t\telse if(globalThis.hasComponent(world.components, otherEid, 'controller')) {\n\t\t\t\t\treturn controller.color[otherEid] !== shipColor;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet collisions = enemiesInRange.filter((otherEid: number) => distance(position.x[otherEid], position.y[otherEid], position.x[eid], position.y[eid]) < Math.max(position.width[eid], position.width[otherEid]));\n\t\t\tif(collisions.length) {\n\t\t\t\tcollide(ships, eid, collisions[0]);\n\n\t\t\t\tvelocity.x[eid] = -velocity.x[eid];\n\t\t\t\tvelocity.y[eid] = -velocity.y[eid];\n\t\t\t\tposition.angle[eid] = computeAngle(velocity.x[eid], velocity.y[eid]);\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction distance(x1: number, y1: number, x2: number, y2: number): number {\n\t\treturn Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2);\n\t}\n\n\tfunction collide(ships: Array<number>, eid: number, target: number) {\n\t\tif(!canTakeDamage(eid) || !canTakeDamage(target)) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tlet enemyWorth = 1;\n\t\tif(globalThis.hasComponent(world.components, target, 'controller')) {\n\t\t\tenemyWorth = ships.filter(eid => world.components.controlled.owner[eid] === target).length;\n\t\t}\n\t\n\t\ttakeDamage(ships, eid, 1);\n\t\ttakeDamage(ships, target, 1);\n\t\n\t\tconst controlled = world.components.controlled;\n\t\tif(world.components.entity.dead[target]) {\n\t\t\tlet stationEid = controlled.owner[eid];\n\t\t\tworld.components.controller.money[stationEid] += enemyWorth;\n\t\t}\n\t\tif(world.components.entity.dead[eid]) {\n\t\t\t// Ship\n\t\t\tif(globalThis.hasComponent(world.components, target, 'controlled')) {\n\t\t\t\tlet stationEid = controlled.owner[target];\n\t\t\t\tworld.components.controller.money[stationEid] += 1;\n\t\t\t}\n\t\t\t// Station\n\t\t\telse if(globalThis.hasComponent(world.components, target, 'controller')) {\n\t\t\t\tworld.components.controller.money[target] += 1;\n\t\t\t}\n\t\t}\n\t}\n\tfunction takeDamage(ships: Array<number>, eid: number, damage: number) {\n\t\tconst health = world.components.health;\n\t\thealth.shields[eid] -= damage;\n\t\thealth.timeSinceTakenDamage[eid] = 0;\n\t\tif(health.shields[eid] < 0) {\n\t\t\tworld.components.entity.dead[eid] = 1;\n\t\n\t\t\tif(globalThis.hasComponent(world.components, eid, 'controller')) {\n\t\t\t\tlet controlledShips = ships.filter(shipEid => world.components.controlled.owner[shipEid] === eid);\n\t\t\t\tcontrolledShips.forEach(shipEid => {\n\t\t\t\t\tworld.components.entity.dead[shipEid] = 1;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction canTakeDamage(eid: number) {\n\t\treturn Atomics.load(world.components.health.timeSinceTakenDamage, eid) >= 200 * 1_000;\n\t}\n\n\tfunction computeAngle(x: number, y: number) {\n\t\tlet radians = Math.atan2(y, x);\n\t\treturn radians * (180 / Math.PI);\n\t}\n}\n\ndeclare global {\n\t// eslint-disable-next-line\n\tvar getEntitiesWithComponents: (world: any, types: Array<string>) => Array<number>;\n\t// eslint-disable-next-line\n\tvar hasComponent: (components: Components, eid: number, type: string) => boolean;\n\t// eslint-disable-next-line\n\tvar Quadtree: any;\n\t// eslint-disable-next-line\n\tvar Rectangle: any;\n\t// eslint-disable-next-line\n\tvar importScripts: any;\n}","import { getEntitiesWithComponents } from '../components/get-entities';\nimport WorldConfig from '../entities/world-config';\n\nglobalThis.getEntitiesWithComponents = getEntitiesWithComponents;\n\nexport default function updateHealthTimersSystem(world: WorldConfig) {\n\tconst health = world.components.health;\n\n\treturn (delta: number) => {\n\t\tglobalThis.getEntitiesWithComponents(world, ['health']).forEach(eid => {\n\t\t\tAtomics.add(health.timeSinceTakenDamage, eid, delta * 1_000);\n\n\t\t\tif(Atomics.load(health.shields, eid) < Atomics.load(health.maxShields, eid)) {\n\t\t\t\tAtomics.add(health.timeSinceShieldRegeneration, eid, delta * 1_000);\n\t\t\t\tif(Atomics.load(health.timeSinceShieldRegeneration, eid) > Atomics.load(health.timeToRegenerateShields, eid)) {\n\t\t\t\t\tAtomics.add(health.shields, eid, 1);\n\t\t\t\t\tAtomics.store(health.timeSinceShieldRegeneration, eid, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n}\n\ndeclare global {\n\t// eslint-disable-next-line\n\tvar getEntitiesWithComponents: (world: any, types: Array<string>) => Array<number>;\n}","import { getEntitiesWithComponents } from '../components/get-entities';\nimport WorldConfig from '../entities/world-config';\n\nglobalThis.getEntitiesWithComponents = getEntitiesWithComponents;\n\nexport default function moveToTargetSystem(world: WorldConfig) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tconst attack = world.components.attack;\n\n\treturn () => {\n\t\tglobalThis.getEntitiesWithComponents(world, ['velocity', 'attack']).forEach(eid => {\n\t\t\tlet target = attack.target[eid];\n\t\t\tif(!target || world.components.entity.dead[target]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet force = getMoveTowardsForce(eid, target);\n\t\t\tlet newNormalizedVelocity = normalize(Atomics.load(velocity.x, eid) + force.x * 4, Atomics.load(velocity.y, eid) + force.y * 4);\n\t\t\tlet newVelocity = {\n\t\t\t\tx: newNormalizedVelocity.x * velocity.speed[eid],\n\t\t\t\ty: newNormalizedVelocity.y * velocity.speed[eid]\n\t\t\t};\n\n\t\t\tAtomics.store(velocity.x, eid, newVelocity.x);\n\t\t\tAtomics.store(velocity.y, eid, newVelocity.y);\n\t\t\tAtomics.store(position.angle, eid, computeAngle(newVelocity.x, newVelocity.y));\n\t\t});\n\t};\n\n\tfunction getMoveTowardsForce(eid: number, otherEid: number) {\n\t\treturn normalize(Atomics.load(position.x, otherEid) - Atomics.load(position.x, eid), Atomics.load(position.y, otherEid) - Atomics.load(position.y, eid));\n\t}\n\n\tfunction computeAngle(x: number, y: number) {\n\t\tlet radians = Math.atan2(y, x);\n\t\treturn radians * (180 / Math.PI);\n\t}\n\n\tfunction normalize(x: number, y: number) {\n\t\tlet len = x * x + y * y;\n\t\tif(len > 0) {\n\t\t\tlen = 1 / Math.sqrt(len);\n\n\t\t\treturn {\n\t\t\t\tx: x * len,\n\t\t\t\ty: y * len\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tx,\n\t\t\t\ty\n\t\t\t};\n\t\t}\n\t}\n}\n\ndeclare global {\n\t// eslint-disable-next-line\n\tvar getEntitiesWithComponents: (world: any, types: Array<string>) => Array<number>;\n}","import { Quadtree, Rectangle } from '@timohausmann/quadtree-ts/src/index.esm';\nimport { getEntitiesWithComponents, hasComponent } from '../components/get-entities';\nimport Components from '../components/components';\nimport WorldConfig from '../entities/world-config';\n\nglobalThis.getEntitiesWithComponents = getEntitiesWithComponents;\nglobalThis.hasComponent = hasComponent;\nglobalThis.Quadtree = Quadtree;\nglobalThis.Rectangle = Rectangle;\n\nexport default function targetEnemySystem(world: WorldConfig) {\n\tconst position = world.components.position;\n\tconst controlled = world.components.controlled;\n\tconst controller = world.components.controller;\n\tconst attack = world.components.attack;\n\n\tif(globalThis.importScripts) {\n\t\tglobalThis.importScripts('https://cdn.jsdelivr.net/npm/@timohausmann/quadtree-ts/dist/quadtree.umd.full.js');\n\t\tglobalThis.Rectangle = globalThis.Quadtree.Rectangle;\n\t}\n\n\treturn () => {\n\t\t// Create and populate quadtree\n\t\tlet quadtree = new globalThis.Quadtree({\n\t\t\twidth: world.bounds.width * 1_000,\n\t\t\theight: world.bounds.height * 1_000\n\t\t});\n\t\tglobalThis.getEntitiesWithComponents(world, ['position', 'health']).forEach(eid => {\n\t\t\tlet data = {\n\t\t\t\tx: Atomics.load(position.x, eid),\n\t\t\t\ty: Atomics.load(position.y, eid),\n\t\t\t\twidth: Atomics.load(position.width, eid),\n\t\t\t\theight: Atomics.load(position.height, eid)\n\t\t\t};\n\n\t\t\tquadtree.insert(new globalThis.Rectangle({\n\t\t\t\t...data,\n\t\t\t\tdata: {\n\t\t\t\t\teid,\n\t\t\t\t\t...data\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\t// TODO: Don't wait a full 200ms to process ships that are just sitting there waiting\n\t\tglobalThis.getEntitiesWithComponents(world, ['velocity', 'attack']).forEach(eid => {\n\t\t\tlet shipColor = Atomics.load(controller.color, Atomics.load(controlled.owner, eid));\n\t\t\tlet x = Atomics.load(position.x, eid);\n\t\t\tlet y = Atomics.load(position.y, eid);\n\t\t\tlet width = Atomics.load(position.width, eid);\n\t\t\tlet height = Atomics.load(position.height, eid);\n\n\t\t\t// Try to find the nearest enemy\n\t\t\tlet rect = {\n\t\t\t\tx: x - 50 * 1_000,\n\t\t\t\ty: y - 50 * 1_000,\n\t\t\t\twidth: width + 100 * 1_000,\n\t\t\t\theight: height + 100 * 1_000\n\t\t\t};\n\t\t\tlet enemies = getEnemiesInRange(quadtree, rect, eid, shipColor);\n\t\t\tif(enemies.length === 0) {\n\t\t\t\trect.x -= 100 * 1_000;\n\t\t\t\trect.y -= 100 * 1_000;\n\t\t\t\trect.width += 200 * 1_000;\n\t\t\t\trect.height += 200 * 1_000;\n\t\t\t\tenemies = getEnemiesInRange(quadtree, rect, eid, shipColor);\n\t\t\t}\n\t\n\t\t\tenemies.sort((a, b) => {\n\t\t\t\treturn euclideanDistance(a.x, a.y, x, y) - euclideanDistance(b.x, b.y, x, y);\n\t\t\t});\n\t\t\tlet enemy = enemies[0] ?? null;\n\n\t\t\t// If no enemies that quadtree could easily find, just head for the nearest station\n\t\t\tif(!enemy) {\n\t\t\t\tlet stations = globalThis.getEntitiesWithComponents(world, ['controller']).filter(stationEid => Atomics.load(controller.color, stationEid) !== shipColor && !world.components.entity.dead[stationEid]);\n\t\t\t\tstations.sort((a, b) => {\n\t\t\t\t\treturn euclideanDistance(Atomics.load(position.x, a), Atomics.load(position.y, a), x, y) - euclideanDistance(Atomics.load(position.x, b), Atomics.load(position.y, b), x, y);\n\t\t\t\t});\n\n\t\t\t\tif(stations.length) {\n\t\t\t\t\tenemy = {\n\t\t\t\t\t\teid: stations[0],\n\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\theight: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(enemy) {\n\t\t\t\tAtomics.store(attack.target, eid, enemy.eid);\n\t\t\t} else {\n\t\t\t\tAtomics.store(attack.target, eid, 0);\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction getEnemiesInRange(quadtree: any, range: { x: number, y: number, width: number, height: number }, eid: number, shipColor: number) : Array<QuadtreeData> {\n\t\tlet entitiesInRange = quadtree.retrieve(new globalThis.Rectangle(range)).map((result: any) => result.data) as Array<QuadtreeData>;\n\t\tentitiesInRange = entitiesInRange.filter(data => data.eid !== eid);\n\t\treturn entitiesInRange.filter(data => {\n\t\t\t// Ship\n\t\t\tif(globalThis.hasComponent(world.components, data.eid, 'controlled')) {\n\t\t\t\tlet stationEid = Atomics.load(controlled.owner, data.eid);\n\t\t\t\treturn Atomics.load(controller.color, stationEid) !== shipColor;\n\t\t\t}\n\t\t\t// Station\n\t\t\telse if(globalThis.hasComponent(world.components, data.eid, 'controller')) {\n\t\t\t\treturn Atomics.load(controller.color, data.eid) !== shipColor;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction euclideanDistance(x1: number, y1: number, x2: number, y2: number): number {\n\t\treturn (x1 - x2) ** 2 + (y1 - y2) ** 2;\n\t}\n\n\tinterface QuadtreeData {\n\t\teid: number;\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number\n\t}\n}\n\ndeclare global {\n\t// eslint-disable-next-line\n\tvar getEntitiesWithComponents: (world: any, types: Array<string>) => Array<number>;\n\t// eslint-disable-next-line\n\tvar hasComponent: (components: Components, eid: number, type: string) => boolean;\n\t// eslint-disable-next-line\n\tvar Quadtree: any;\n\t// eslint-disable-next-line\n\tvar Rectangle: any;\n\t// eslint-disable-next-line\n\tvar importScripts: any;\n}","import Entity from './entity';\nimport { EventEmitter } from 'eventemitter3';\nimport Station from './station';\nimport spawnShipSystem from '../systems/spawn-ship-system';\nimport velocitySystem from '../systems/velocity-system';\nimport collisionSystem from '../systems/collision-system';\nimport updateHealthTimersSystem from '../systems/update-health-timers-system';\nimport moveToTargetSystem from '../systems/move-to-target-system';\nimport targetEnemySystem from '../systems/target-enemy-system';\nimport Components from '../components/components';\nimport WorldConfig from './world-config';\nimport { getEntitiesWithComponents, getTypeBit, getTypeBits, hasComponent, addComponents } from '../components/get-entities';\n\nexport default class World extends EventEmitter {\n\tbounds: {\n\t\twidth: number,\n\t\theight: number\n\t} = { width: 0, height: 0 };\n\tidCounter: Int32Array;\n\tcomponents: Components;\n\tsystems: Array<(delta: number) => void> = [];\n\tsystemUpdates: { [s: string]: Array<number> } = {};\n\tworkers: Array<Worker> = [];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.idCounter = this.createIntegerArray(4);\n\n\t\tthis.components = {\n\t\t\tentity: {\n\t\t\t\tcomponents: this.createIntegerArray(),\n\t\t\t\tinit: this.createIntegerArray(),\n\t\t\t\tdead: this.createIntegerArray()\n\t\t\t},\n\t\t\tposition: {\n\t\t\t\tx: this.createIntegerArray(),\n\t\t\t\ty: this.createIntegerArray(),\n\t\t\t\twidth: this.createIntegerArray(),\n\t\t\t\theight: this.createIntegerArray(),\n\t\t\t\tangle: this.createIntegerArray()\n\t\t\t},\n\t\t\tvelocity: {\n\t\t\t\tx: this.createIntegerArray(),\n\t\t\t\ty: this.createIntegerArray(),\n\t\t\t\tspeed: this.createIntegerArray()\n\t\t\t},\n\t\t\thealth: {\n\t\t\t\tshields: this.createIntegerArray(),\n\t\t\t\tmaxShields: this.createIntegerArray(),\n\t\t\t\ttimeToRegenerateShields: this.createIntegerArray(),\n\t\t\t\ttimeSinceShieldRegeneration: this.createIntegerArray(),\n\t\t\t\ttimeSinceTakenDamage: this.createIntegerArray()\n\t\t\t},\n\t\t\tcontroller: {\n\t\t\t\tcolor: this.createIntegerArray(),\n\t\t\t\tmoney: this.createIntegerArray()\n\t\t\t},\n\t\t\tcontrolled: {\n\t\t\t\towner: this.createIntegerArray()\n\t\t\t},\n\t\t\tattack: {\n\t\t\t\ttarget: this.createIntegerArray()\n\t\t\t}\n\t\t};\n\n\t\tthis.addSystemWorker(spawnShipSystem);\n\t\tthis.addSystemWorker(velocitySystem);\n\t\t// TODO: Shard into 2 collision threads\n\t\tthis.addSystemWorker(collisionSystem);\n\t\tthis.addSystemWorker(updateHealthTimersSystem);\n\t\t// TODO: Shard into 2-4 targeting threads\n\t\tthis.addSystemWorker(targetEnemySystem);\n\t\tthis.addSystemWorker(moveToTargetSystem);\n\t}\n\t// TODO: Resize buffers as we grow in size and recycle dead ids instead of requiring such a ridiculously huge buffer\n\tprivate createIntegerArray(size = 65_536) {\n\t\tlet buffer = new SharedArrayBuffer(size * Int32Array.BYTES_PER_ELEMENT);\n\t\treturn new Int32Array(buffer);\n\t}\n\n\tload(config: any) {\n\t\tconfig.entities.forEach((entityConfig: any) => {\n\t\t\tlet entity;\n\t\t\tswitch(entityConfig.type) {\n\t\t\t\tcase 'station':\n\t\t\t\t\tentity = new Station(this);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tentity = new Entity(this);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tentity.load(entityConfig);\n\t\t});\n\n\t\tif(config.bounds) {\n\t\t\tthis.bounds = config.bounds;\n\t\t}\n\n\t\tthis.workers.forEach(worker => {\n\t\t\tworker.postMessage({\n\t\t\t\tupdateWorld: {\n\t\t\t\t\tbounds: this.bounds\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tgetId() {\n\t\treturn Atomics.add(this.idCounter, 0, 1) + 1;\n\t}\n\n\tupdate(delta: number) {\n\t\tthis.systems.forEach(system => {\n\t\t\tsystem(delta);\n\t\t});\n\t}\n\n\taddSystem(name: string, update: (delta: number) => void) {\n\t\tthis.systems.push((delta: number) => {\n\t\t\tlet start = performance.now();\n\t\t\tupdate(delta);\n\t\t\tthis.systemUpdates[name].push(performance.now() - start);\n\t\t});\n\t\tthis.systemUpdates[name] = [];\n\t}\n\taddSystemWorker(func: any) {\n\t\tlet functionName = func.name;\n\t\tlet inlineString = `\n\n\t\t(\n\t\t\t${\n\t\t\t\t(() => {\n\t\t\t\t\tlet world: any;\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tlet system = (delta: number) => { console.warn('Updating system before sent'); };\n\n\t\t\t\t\tself.onmessage = function(e) {\n\t\t\t\t\t\tif(e.data.world) {\n\t\t\t\t\t\t\tlet functionName = e.data.functionName;\n\t\t\t\t\t\t\tworld = e.data.world;\n\t\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\t\tsystem = self[functionName](world);\n\t\t\t\t\t\t} else if(e.data.updateWorld) {\n\t\t\t\t\t\t\tObject.keys(e.data.updateWorld).forEach(key => {\n\t\t\t\t\t\t\t\tworld[key] = e.data.updateWorld[key];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if(e.data.delta) {\n\t\t\t\t\t\t\tsystem(e.data.delta);\n\n\t\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\t\tdone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}).toString()\n\t\t\t}\n\t\t)()\n\n\t\t${func.toString()}\n\t\t${getEntitiesWithComponents.toString()}\n\t\t${getTypeBit.toString()}\n\t\t${getTypeBits.toString()}\n\t\t${hasComponent.toString()}\n\t\t${addComponents.toString()}`;\n\n\t\tlet start = 0;\n\t\tlet missedDeltas = 0;\n\t\tlet blob = new Blob([inlineString], { type: 'text/javascript' });\n\t\tlet worker = new Worker(window.URL.createObjectURL(blob));\n\t\tthis.systems.push((delta) => {\n\t\t\t// We don't want to try to update while it is still executing the last update\n\t\t\tif(start) {\n\t\t\t\tmissedDeltas += delta;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstart = performance.now();\n\t\t\tworker.postMessage({\n\t\t\t\tdelta: delta + missedDeltas\n\t\t\t});\n\t\t\tmissedDeltas = 0;\n\t\t});\n\n\t\tlet config: WorldConfig = {\n\t\t\tidCounter: this.idCounter,\n\t\t\tbounds: this.bounds,\n\t\t\tcomponents: this.components\n\t\t};\n\t\tthis.systemUpdates[functionName] = [];\n\n\t\tworker.postMessage({\n\t\t\tfunctionName,\n\t\t\tworld: config\n\t\t});\n\t\tworker.onmessage = (e) => {\n\t\t\tif(e.data.done) {\n\t\t\t\tthis.systemUpdates[functionName].push(performance.now() - start);\n\t\t\t\tstart = 0;\n\t\t\t}\n\t\t};\n\t\tthis.workers.push(worker);\n\t}\n\n\tdestroy() {\n\t\tthis.workers.forEach(worker => {\n\t\t\tworker.terminate();\n\t\t});\n\t\tthis.workers = [];\n\t}\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-68055184\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  key: 0,\n  class: \"home\"\n}\nconst _hoisted_2 = { class: \"list\" }\nconst _hoisted_3 = { style: {\"color\":\"red\"} }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"phaser-container-multithreaded\" }, null, -1))\nconst _hoisted_6 = { key: 1 }\n\nimport { ref, onMounted, onBeforeUnmount, Ref } from 'vue';\nimport Phaser from 'phaser';\nimport generateScene from '@/data/generate-scene';\nimport World from './entities/world';\nimport { INT_FLOAT_MULTIPLIER } from './constants';\nimport { getAllEntitiesWithComponents, getEntitiesWithComponents, hasComponent } from './components/get-entities';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\nconst supportsSharedArrayBuffers = !!window.SharedArrayBuffer;\n\nlet world: World;\nconst minUpdateTime = ref(0);\nconst maxUpdateTime = ref(0);\nconst avgUpdateTime = ref(0);\nconst stationsCount = ref(0);\nconst shipsCount = ref(0);\nconst stationShips = ref([]) as Ref<Array<{ eid: number, color: number, displayColor: string, ships: number }>>;\nconst systemUpdates = ref([]) as Ref<Array<{ name: string, min: number, avg: number, max: number }>>;\n\nlet game: Phaser.Game | null;\nonMounted(() => {\n\tworld = new World();\n\tlet updateTicks = 0;\n\tlet updateTimes: Array<number> = [];\n\n\tconst width = window.innerWidth / 3 * 2;\n\tconst height = window.innerHeight / 3 * 2;\n\tlet paused = false;\n\tconst eidSpriteMap = new Map<number, any>();\n\tlet add: any;\n\tgame = new Phaser.Game({\n\t\ttype: Phaser.AUTO,\n\t\twidth,\n\t\theight,\n\t\tparent: 'phaser-container-multithreaded',\n\t\t// @ts-expect-error\n\t\tscene: {\n\t\t\tpreload() {\n\t\t\t\tthis.load.image('boid', 'boid.png');\n\t\t\t\tthis.load.image('station', 'station.png');\n\t\t\t\tthis.load.image('shield', 'shield3.png');\n\t\t\t},\n\t\t\tcreate() {\n\t\t\t\tadd = this.add;\n\t\t\t\tworld.load(generateScene({\n\t\t\t\t\tstations: 10,\n\t\t\t\t\tshipsPerStation: 100,\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t}));\n\n\t\t\t\tlet stations = getEntitiesWithComponents(world, ['controller']);\n\t\t\t\tstationShips.value = stations.map(eid => {\n\t\t\t\t\tlet color = world.components.controller.color[eid];\n\t\t\t\t\tlet displayColor = '#' + color.toString(16);\n\t\t\t\t\tif(displayColor === '#ffffff') {\n\t\t\t\t\t\tdisplayColor = '#00000';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\teid,\n\t\t\t\t\t\tcolor,\n\t\t\t\t\t\tdisplayColor,\n\t\t\t\t\t\tships: 0\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.input.keyboard.on('keydown-SPACE', () => {\n\t\t\t\t\tpaused = !paused;\n\t\t\t\t});\n\n\t\t\t\tObject.keys(world.systemUpdates).forEach(systemName => {\n\t\t\t\t\tsystemUpdates.value.push({\n\t\t\t\t\t\tname: systemName,\n\t\t\t\t\t\tmin:0,\n\t\t\t\t\t\tavg: 0,\n\t\t\t\t\t\tmax: 0\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tupdate(time: number, delta: number) {\n\t\t\t\tif(paused) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet start = performance.now();\n\t\t\t\tworld.update(delta);\n\n\t\t\t\tlet position = world.components.position;\n\t\t\t\tgetAllEntitiesWithComponents(world, ['position', 'health']).forEach(eid => {\n\t\t\t\t\tlet image = eidSpriteMap.get(eid);\n\t\t\t\t\tif(world.components.entity.dead[eid]) {\n\t\t\t\t\t\tif(image) {\n\t\t\t\t\t\t\timage.destroy();\n\t\t\t\t\t\t\timage.shieldImage.destroy();\n\t\t\t\t\t\t\teidSpriteMap.delete(eid);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(!image) {\n\t\t\t\t\t\t\tif(Atomics.load(world.components.entity.init, eid) === 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\timage = add.image(0, 0, hasComponent(world.components, eid, 'controller') ? 'station' : 'boid');\n\n\t\t\t\t\t\t\timage.setScale(position.width[eid] / image.width / INT_FLOAT_MULTIPLIER, position.height[eid] / image.height / INT_FLOAT_MULTIPLIER);\n\t\t\t\t\t\t\timage.shieldImage = add.image(0, 0, 'shield');\n\t\t\t\t\t\t\timage.shieldImage.setScale(position.width[eid] / image.shieldImage.width / INT_FLOAT_MULTIPLIER * 2,position.height[eid] / image.shieldImage.height / INT_FLOAT_MULTIPLIER * 2);\n\n\t\t\t\t\t\t\tif(hasComponent(world.components, eid, 'controller')) {\n\t\t\t\t\t\t\t\timage.setTint(Atomics.load(world.components.controller.color, eid));\n\t\t\t\t\t\t\t} else if(hasComponent(world.components, eid, 'controlled')) {\n\t\t\t\t\t\t\t\tlet stationEid = Atomics.load(world.components.controlled.owner, eid);\n\t\t\t\t\t\t\t\timage.setTint(Atomics.load(world.components.controller.color, stationEid));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\teidSpriteMap.set(eid, image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timage.x = image.shieldImage.x = (world.components.position.x[eid] / INT_FLOAT_MULTIPLIER);\n\t\t\t\t\t\timage.y = image.shieldImage.y = (world.components.position.y[eid] / INT_FLOAT_MULTIPLIER);\n\t\t\t\t\t\timage.angle = image.shieldImage.angle = world.components.position.angle[eid];\n\t\t\t\t\t\t\n\t\t\t\t\t\timage.shieldImage.visible = world.components.health.shields[eid] > 0;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet end = performance.now();\n\n\t\t\t\tupdateTimes.push(end - start);\n\t\t\t\tupdateTicks += delta;\n\t\t\t\tif(updateTicks > INT_FLOAT_MULTIPLIER) {\n\t\t\t\t\tminUpdateTime.value = updateTimes.reduce((min, time) => {\n\t\t\t\t\t\treturn Math.min(min, time);\n\t\t\t\t\t}, 1_000_000);\n\t\t\t\t\tmaxUpdateTime.value = updateTimes.reduce((max, time) => {\n\t\t\t\t\t\treturn Math.max(max, time);\n\t\t\t\t\t}, 0);\n\t\t\t\t\tavgUpdateTime.value = updateTimes.reduce((total, time) => {\n\t\t\t\t\t\treturn total + time;\n\t\t\t\t\t}, 0) / updateTimes.length;\n\t\t\t\t\tupdateTimes = [];\n\t\t\t\t\tupdateTicks = 0;\n\n\t\t\t\t\tlet stations = getEntitiesWithComponents(world, ['controller']);\n\t\t\t\t\tlet ships = getEntitiesWithComponents(world, ['controlled']);\n\t\t\t\t\tstationsCount.value = stations.length;\n\t\t\t\t\tshipsCount.value = ships.length;\n\n\t\t\t\t\tstationShips.value.forEach(val => {\n\t\t\t\t\t\tlet matchingStationEid = stations.find(eid => world.components.controller.color[eid] === val.color);\n\t\t\t\t\t\tif(matchingStationEid !== undefined) {\n\t\t\t\t\t\t\tval.ships = ships.filter(eid => world.components.controlled.owner[eid] === val.eid).length;\n\t\t\t\t\t\t} else if(val.ships > 0) {\n\t\t\t\t\t\t\t// paused = true;\n\t\t\t\t\t\t\tval.ships = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tsystemUpdates.value = [];\n\t\t\t\t\tObject.keys(world.systemUpdates).forEach(systemName => {\n\t\t\t\t\t\tlet updates = world.systemUpdates[systemName];\n\n\t\t\t\t\t\tsystemUpdates.value.push({\n\t\t\t\t\t\t\tname: systemName,\n\t\t\t\t\t\t\tmin: updates.reduce((min, time) => {\n\t\t\t\t\t\t\t\treturn Math.min(min, time);\n\t\t\t\t\t\t\t}, 1_000_000),\n\t\t\t\t\t\t\tavg: updates.reduce((total, time) => {\n\t\t\t\t\t\t\t\treturn total + time;\n\t\t\t\t\t\t\t}, 0) / updates.length,\n\t\t\t\t\t\t\tmax: updates.reduce((max, time) => {\n\t\t\t\t\t\t\t\treturn Math.max(max, time);\n\t\t\t\t\t\t\t}, 0)\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tworld.systemUpdates[systemName] = [];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\nonBeforeUnmount(() => {\n\tif(game) {\n\t\tgame.destroy();\n\t\tgame = null;\n\t}\n\tif(world) {\n\t\tworld.destroy();\n\t}\n});\n\nfunction addShips() {\n\tgetEntitiesWithComponents(world, ['controller']).forEach(eid => {\n\t\tworld.components.controller.money[eid] += 10;\n\t});\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return supportsSharedArrayBuffers\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", _hoisted_3, \"mainThread: \" + _toDisplayString(maxUpdateTime.value.toFixed(2)) + \" (\" + _toDisplayString(avgUpdateTime.value.toFixed(2)) + \" avg) ms\", 1),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(systemUpdates), (system) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: system.name\n            }, _toDisplayString(system.name) + \": \" + _toDisplayString(system.max.toFixed(2)) + \" (\" + _toDisplayString(system.avg.toFixed(2)) + \" avg) ms\", 1))\n          }), 128)),\n          _hoisted_4,\n          _createElementVNode(\"div\", null, \"Entities: \" + _toDisplayString(stationsCount.value) + \" stations and \" + _toDisplayString(shipsCount.value) + \" ships\", 1),\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stationShips), (station) => {\n            return (_openBlock(), _createElementBlock(\"span\", {\n              class: \"station-list\",\n              key: station.color,\n              style: _normalizeStyle({ color: station.displayColor })\n            }, _toDisplayString('#' + station.color.toString(16)) + \": \" + _toDisplayString(station.ships), 5))\n          }), 128)),\n          _createElementVNode(\"div\", null, [\n            _createElementVNode(\"button\", { onClick: addShips }, \"Add Ships\")\n          ])\n        ]),\n        _hoisted_5\n      ]))\n    : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" Browser does not suport SharedArrayBuffer \"))\n}\n}\n\n})","export { default } from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./MultithreadedGame.vue?vue&type=script&setup=true&lang=ts\"; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./MultithreadedGame.vue?vue&type=script&setup=true&lang=ts\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./MultithreadedGame.vue?vue&type=style&index=0&id=68055184&scoped=true&lang=css\"","import script from \"./MultithreadedGame.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./MultithreadedGame.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./MultithreadedGame.vue?vue&type=style&index=0&id=68055184&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ecs-arraybuffer/ecs-arraybuffer/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-68055184\"]])\n\nexport default __exports__"],"names":["INT_FLOAT_MULTIPLIER","EventEmitter","Entity","x","world","components","position","eid","val","y","width","height","shields","health","maxShields","timeToRegenerateShields","timeSinceShieldRegeneration","timeSinceTakenDamage","dead","constructor","getId","load","config","Object","keys","forEach","key","getEntitiesWithComponents","types","typeBits","getTypeBits","eids","currentCounter","Atomics","idCounter","entity","push","getAllEntitiesWithComponents","getTypeBit","type","hasComponent","addComponents","or","Station","color","controller","money","store","init","globalThis","spawnShipSystem","controlled","velocity","SHIP_SPEED","stationEid","shipEid","add","speed","owner","velocityX","Math","random","velocityY","angle","computeAngle","sub","radians","atan2","PI","velocitySystem","delta","ships","deltaVelocityX","deltaVelocityY","newPositionX","newPositionY","bounds","Quadtree","Rectangle","collisionSystem","importScripts","quadtree","insert","data","entitiesInRange","retrieve","map","result","filter","otherEid","shipColor","enemiesInRange","collisions","distance","max","length","collide","x1","y1","x2","y2","sqrt","target","canTakeDamage","enemyWorth","takeDamage","damage","controlledShips","updateHealthTimersSystem","moveToTargetSystem","attack","force","getMoveTowardsForce","newNormalizedVelocity","normalize","newVelocity","len","targetEnemySystem","rect","enemies","getEnemiesInRange","sort","a","b","euclideanDistance","enemy","stations","range","World","createIntegerArray","addSystemWorker","size","buffer","SharedArrayBuffer","Int32Array","BYTES_PER_ELEMENT","entities","entityConfig","workers","worker","postMessage","updateWorld","update","systems","system","addSystem","name","start","performance","now","systemUpdates","func","functionName","inlineString","console","warn","self","onmessage","e","done","toString","missedDeltas","blob","Blob","Worker","window","URL","createObjectURL","destroy","terminate","defineComponent","_defineComponent","toDisplayString","_toDisplayString","createElementVNode","_createElementVNode","unref","_unref","renderList","_renderList","Fragment","_Fragment","openBlock","_openBlock","createElementBlock","_createElementBlock","normalizeStyle","_normalizeStyle","pushScopeId","_pushScopeId","popScopeId","_popScopeId","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","style","_hoisted_4","_hoisted_5","id","_hoisted_6","ref","onMounted","onBeforeUnmount","Phaser","generateScene","setup","__props","supportsSharedArrayBuffers","minUpdateTime","maxUpdateTime","avgUpdateTime","stationsCount","shipsCount","stationShips","game","updateTicks","updateTimes","innerWidth","innerHeight","paused","eidSpriteMap","Map","Game","AUTO","parent","scene","preload","image","create","shipsPerStation","value","displayColor","input","keyboard","on","systemName","min","avg","time","get","shieldImage","delete","setScale","setTint","set","visible","end","reduce","total","matchingStationEid","find","undefined","updates","addShips","_ctx","_cache","toFixed","station","onClick"],"sourceRoot":""}