(function(){"use strict";function t(t){let e,o=t=>{console.warn("Updating system before sent")};self.onmessage=function(s){s.data.world?(e=s.data.world,o=t(e)):s.data.updateWorld?Object.keys(s.data.updateWorld).forEach((t=>{e[t]=s.data.updateWorld[t]})):s.data.delta&&(o(s.data.delta),self.postMessage({done:!0}))}}function e(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}class o{constructor(t,o=0){e(this,"bounds",void 0),e(this,"maxObjects",void 0),e(this,"maxLevels",void 0),e(this,"level",void 0),e(this,"objects",void 0),e(this,"nodes",void 0),this.bounds={x:t.x||0,y:t.y||0,width:t.width,height:t.height},this.maxObjects="number"===typeof t.maxObjects?t.maxObjects:10,this.maxLevels="number"===typeof t.maxLevels?t.maxLevels:4,this.level=o,this.objects=[],this.nodes=[]}getIndex(t){return t.qtIndex(this.bounds)}split(){const t=this.level+1,e=this.bounds.width/2,s=this.bounds.height/2,i=this.bounds.x,n=this.bounds.y,h=[{x:i+e,y:n},{x:i,y:n},{x:i,y:n+s},{x:i+e,y:n+s}];for(let d=0;d<4;d++)this.nodes[d]=new o({x:h[d].x,y:h[d].y,width:e,height:s,maxObjects:this.maxObjects,maxLevels:this.maxLevels},t)}insert(t){if(this.nodes.length){const e=this.getIndex(t);for(let o=0;o<e.length;o++)this.nodes[e[o]].insert(t)}else if(this.objects.push(t),this.objects.length>this.maxObjects&&this.level<this.maxLevels){this.nodes.length||this.split();for(let t=0;t<this.objects.length;t++){const e=this.getIndex(this.objects[t]);for(let o=0;o<e.length;o++)this.nodes[e[o]].insert(this.objects[t])}this.objects=[]}}retrieve(t){const e=this.getIndex(t);let o=this.objects;if(this.nodes.length)for(let s=0;s<e.length;s++)o=o.concat(this.nodes[e[s]].retrieve(t));return o=o.filter((function(t,e){return o.indexOf(t)>=e})),o}clear(){this.objects=[];for(let t=0;t<this.nodes.length;t++)this.nodes.length&&this.nodes[t].clear();this.nodes=[]}}class s{constructor(t){e(this,"x",void 0),e(this,"y",void 0),e(this,"width",void 0),e(this,"height",void 0),e(this,"data",void 0),this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this.data=t.data}qtIndex(t){const e=[],o=t.x+t.width/2,s=t.y+t.height/2,i=this.y<s,n=this.x<o,h=this.x+this.width>o,d=this.y+this.height>s;return i&&h&&e.push(0),n&&i&&e.push(1),n&&d&&e.push(2),h&&d&&e.push(3),e}}function i(t){switch(t){case"entity":return 1;case"position":return 2;case"velocity":return 4;case"health":return 8;case"controller":return 16;case"controlled":return 32;case"attack":return 64;default:return 0}}function n(t){let e=0;return t.forEach((t=>{e|=i(t)})),e}function h(t,e){let o=n(e),s=[],i=Atomics.load(t.idCounter,0);for(let n=0;n<=i;n++)(Atomics.load(t.components.entity.components,n)&o)===o&&0===Atomics.load(t.components.entity.dead,n)&&s.push(n);return s}function d(t,e,o,s){return(t-o)**2+(e-s)**2}function l(t,e,o){return(Atomics.load(t.entity.components,e)&i(o))>0}function c(t){const e=t.components.position,i=t.components.controlled,n=t.components.controller,c=t.components.attack;return()=>{let l=new o({width:1e3*t.bounds.width,height:1e3*t.bounds.height});h(t,["position","health"]).forEach((t=>{let o={x:Atomics.load(e.x,t),y:Atomics.load(e.y,t),width:Atomics.load(e.width,t),height:Atomics.load(e.height,t)};l.insert(new s({...o,data:{eid:t,...o}}))})),h(t,["velocity","attack"]).forEach((o=>{let s=Atomics.load(n.color,Atomics.load(i.owner,o)),a=Atomics.load(e.x,o),u=Atomics.load(e.y,o),m=Atomics.load(e.width,o),x=Atomics.load(e.height,o),f={x:a-5e4,y:u-5e4,width:m+1e5,height:x+1e5},g=r(l,f,o,s);0===g.length&&(f.x-=1e5,f.y-=1e5,f.width+=2e5,f.height+=2e5,g=r(l,f,o,s)),g.sort(((t,e)=>d(t.x,t.y,a,u)-d(e.x,e.y,a,u)));let y=g[0]??null;if(!y){let o=h(t,["controller"]).filter((e=>Atomics.load(n.color,e)!==s&&!t.components.entity.dead[e]));o.sort(((t,o)=>d(Atomics.load(e.x,t),Atomics.load(e.y,t),a,u)-d(Atomics.load(e.x,o),Atomics.load(e.y,o),a,u))),o.length&&(y={eid:o[0],x:0,y:0,width:0,height:0})}y?Atomics.store(c.target,o,y.eid):Atomics.store(c.target,o,0)}))};function r(e,o,h,d){let c=e.retrieve(new s(o)).map((t=>t.data));return c=c.filter((t=>t.eid!==h)),c.filter((e=>{if(l(t.components,e.eid,"controlled")){let t=Atomics.load(i.owner,e.eid);return Atomics.load(n.color,t)!==d}return!!l(t.components,e.eid,"controller")&&Atomics.load(n.color,e.eid)!==d}))}}t(c)})();
//# sourceMappingURL=624.cc7aa054.js.map