(function(){"use strict";function e(e){let t,o=e=>{console.warn("Updating system before sent")};self.onmessage=function(n){n.data.world?(t=n.data.world,o=e(t)):n.data.updateWorld?Object.keys(n.data.updateWorld).forEach((e=>{t[e]=n.data.updateWorld[e]})):n.data.delta&&(o(n.data.delta),self.postMessage({done:!0}))}}function t(e){switch(e){case"entity":return 1;case"position":return 2;case"velocity":return 4;case"health":return 8;case"controller":return 16;case"controlled":return 32;case"attack":return 64;default:return 0}}function o(e){let o=0;return e.forEach((e=>{o|=t(e)})),o}function n(e,t){let n=o(t),a=[],i=Atomics.load(e.idCounter,0);for(let o=0;o<=i;o++)(Atomics.load(e.components.entity.components,o)&n)===n&&0===Atomics.load(e.components.entity.dead,o)&&a.push(o);return a}function a(e){const t=e.components.health;return o=>{n(e,["health"]).forEach((e=>{Atomics.add(t.timeSinceTakenDamage,e,1e3*o),Atomics.load(t.shields,e)<Atomics.load(t.maxShields,e)&&(Atomics.add(t.timeSinceShieldRegeneration,e,1e3*o),Atomics.load(t.timeSinceShieldRegeneration,e)>Atomics.load(t.timeToRegenerateShields,e)&&(Atomics.add(t.shields,e,1),Atomics.store(t.timeSinceShieldRegeneration,e,0)))}))}}e(a)})();
//# sourceMappingURL=870.3369d517.js.map