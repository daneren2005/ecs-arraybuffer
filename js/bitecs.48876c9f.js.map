{"version":3,"file":"js/bitecs.48876c9f.js","mappings":"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","sources":["webpack://ecs-arraybuffer/../src/Constants.js","webpack://ecs-arraybuffer/../src/Storage.js","webpack://ecs-arraybuffer/../src/Util.js","webpack://ecs-arraybuffer/../src/Serialize.js","webpack://ecs-arraybuffer/../src/Entity.js","webpack://ecs-arraybuffer/../src/Query.js","webpack://ecs-arraybuffer/../src/Component.js","webpack://ecs-arraybuffer/../src/World.js","webpack://ecs-arraybuffer/../src/System.js","webpack://ecs-arraybuffer/../src/index.js","webpack://ecs-arraybuffer/./src/bitecs/entities/entity.ts","webpack://ecs-arraybuffer/./src/bitecs/entities/station.ts","webpack://ecs-arraybuffer/./src/bitecs/entities/ship.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/spawn-ship-system.ts","webpack://ecs-arraybuffer/./src/bitecs/components/position.ts","webpack://ecs-arraybuffer/./src/bitecs/components/controller.ts","webpack://ecs-arraybuffer/./src/bitecs/components/velocity.ts","webpack://ecs-arraybuffer/./src/bitecs/components/health.ts","webpack://ecs-arraybuffer/./src/bitecs/components/controlled.ts","webpack://ecs-arraybuffer/./src/bitecs/components/attack.ts","webpack://ecs-arraybuffer/./src/bitecs/components/index.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/velocity-system.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/collision-system.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/target-enemy-system.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/create-quad-tree-system.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/update-health-timers-system.ts","webpack://ecs-arraybuffer/./src/bitecs/systems/move-to-target-system.ts","webpack://ecs-arraybuffer/./src/bitecs/entities/world.ts","webpack://ecs-arraybuffer/./node_modules/vue-loader/dist/index.js","webpack://ecs-arraybuffer/./src/bitecs/BitECSGame.vue?123c","webpack://ecs-arraybuffer/./src/bitecs/BitECSGame.vue?c70c","webpack://ecs-arraybuffer/./src/bitecs/BitECSGame.vue?079c","webpack://ecs-arraybuffer/./src/bitecs/BitECSGame.vue"],"sourcesContent":["export const TYPES_ENUM = {\n  i8: 'i8',\n  ui8: 'ui8',\n  ui8c: 'ui8c',\n  i16: 'i16',\n  ui16: 'ui16',\n  i32: 'i32',\n  ui32: 'ui32',\n  f32: 'f32',\n  f64: 'f64',\n  eid: 'eid',\n}\n\nexport const TYPES_NAMES = {\n  i8: 'Int8',\n  ui8: 'Uint8',\n  ui8c: 'Uint8Clamped',\n  i16: 'Int16',\n  ui16: 'Uint16',\n  i32: 'Int32',\n  ui32: 'Uint32',\n  eid: 'Uint32',\n  f32: 'Float32',\n  f64: 'Float64'\n}\n\nexport const TYPES = {\n  i8: Int8Array,\n  ui8: Uint8Array,\n  ui8c: Uint8ClampedArray,\n  i16: Int16Array,\n  ui16: Uint16Array,\n  i32: Int32Array,\n  ui32: Uint32Array,\n  f32: Float32Array,\n  f64: Float64Array,\n  eid: Uint32Array,\n}\n\nexport const UNSIGNED_MAX = {\n  uint8: 2**8,\n  uint16: 2**16,\n  uint32: 2**32\n}\n","import { TYPES, TYPES_ENUM, TYPES_NAMES, UNSIGNED_MAX } from './Constants.js'\n// import { createAllocator } from './Allocator.js'\n\nconst roundToMultiple = mul => x => Math.ceil(x / mul) * mul\nconst roundToMultiple4 = roundToMultiple(4)\n\nexport const $storeRef = Symbol('storeRef')\nexport const $storeSize = Symbol('storeSize')\nexport const $storeMaps = Symbol('storeMaps')\nexport const $storeFlattened = Symbol('storeFlattened')\nexport const $storeBase = Symbol('storeBase')\nexport const $storeType = Symbol('storeType')\n\nexport const $storeArrayElementCounts = Symbol('storeArrayElementCounts')\nexport const $storeSubarrays = Symbol('storeSubarrays')\nexport const $subarrayCursors = Symbol('subarrayCursors')\nexport const $subarray = Symbol('subarray')\nexport const $subarrayFrom = Symbol('subarrayFrom')\nexport const $subarrayTo = Symbol('subarrayTo')\nexport const $parentArray = Symbol('parentArray')\nexport const $tagStore = Symbol('tagStore')\n\nexport const $queryShadow = Symbol('queryShadow')\nexport const $serializeShadow = Symbol('serializeShadow')\n\nexport const $indexType = Symbol('indexType')\nexport const $indexBytes = Symbol('indexBytes')\n\nexport const $isEidType = Symbol('isEidType')\n\nconst stores = {}\n\n// const alloc = createAllocator()\n\nexport const resize = (ta, size) => {\n  const newBuffer = new ArrayBuffer(size * ta.BYTES_PER_ELEMENT)\n  const newTa = new ta.constructor(newBuffer)\n  newTa.set(ta, 0)\n  return newTa\n}\n\nexport const createShadow = (store, key) => {\n  if (!ArrayBuffer.isView(store)) {\n    const shadowStore = store[$parentArray].slice(0)\n    store[key] = store.map((_,eid) => {\n      const { length } = store[eid]\n      const start = length * eid\n      const end = start + length\n      return shadowStore.subarray(start, end)\n    })\n  } else {\n    store[key] = store.slice(0)\n  }\n}\n\nconst resizeSubarray = (metadata, store, storeSize) => {\n  const cursors = metadata[$subarrayCursors]\n  let type = store[$storeType]\n  const length = store[0].length\n  const indexType =\n    length <= UNSIGNED_MAX.uint8\n      ? TYPES_ENUM.ui8\n      : length <= UNSIGNED_MAX.uint16\n        ? TYPES_ENUM.ui16\n        : TYPES_ENUM.ui32\n\n  if (cursors[type] === 0) {\n\n    const arrayElementCount = metadata[$storeArrayElementCounts][type]\n    \n    // // for threaded impl\n    // // const summedBytesPerElement = Array(arrayCount).fill(0).reduce((a, p) => a + TYPES[type].BYTES_PER_ELEMENT, 0)\n    // // const totalBytes = roundToMultiple4(summedBytesPerElement * summedLength * size)\n    // // const buffer = new SharedArrayBuffer(totalBytes)\n\n    const array = new TYPES[type](roundToMultiple4(arrayElementCount * storeSize))\n\n    array.set(metadata[$storeSubarrays][type])\n    \n    metadata[$storeSubarrays][type] = array\n    \n    array[$indexType] = TYPES_NAMES[indexType]\n    array[$indexBytes] = TYPES[indexType].BYTES_PER_ELEMENT\n  }\n\n  const start = cursors[type]\n  const end = start + (storeSize * length)\n  cursors[type] = end\n\n  store[$parentArray] = metadata[$storeSubarrays][type].subarray(start, end)\n\n  // pre-generate subarrays for each eid\n  for (let eid = 0; eid < storeSize; eid++) {\n    const start = length * eid\n    const end = start + length\n    store[eid] = store[$parentArray].subarray(start, end)\n    store[eid][$indexType] = TYPES_NAMES[indexType]\n    store[eid][$indexBytes] = TYPES[indexType].BYTES_PER_ELEMENT\n    store[eid][$subarray] = true\n  }\n\n}\n\nconst resizeRecursive = (metadata, store, size) => {\n  Object.keys(store).forEach(key => {\n    const ta = store[key]\n    if (Array.isArray(ta)) {\n      resizeSubarray(metadata, ta, size)\n      store[$storeFlattened].push(ta)\n    } else if (ArrayBuffer.isView(ta)) {\n      store[key] = resize(ta, size)\n      store[$storeFlattened].push(store[key])\n    } else if (typeof ta === 'object') {\n      resizeRecursive(metadata, store[key], size)\n    }\n  })\n}\n\nexport const resizeStore = (store, size) => {\n  if (store[$tagStore]) return\n  store[$storeSize] = size\n  store[$storeFlattened].length = 0\n  Object.keys(store[$subarrayCursors]).forEach(k => {\n    store[$subarrayCursors][k] = 0\n  })\n  resizeRecursive(store, store, size)\n}\n\nexport const resetStore = store => {\n  if (store[$storeFlattened]) {\n    store[$storeFlattened].forEach(ta => {\n      ta.fill(0)\n    })\n    Object.keys(store[$storeSubarrays]).forEach(key => {\n      store[$storeSubarrays][key].fill(0)\n    })\n  }\n}\n\nexport const resetStoreFor = (store, eid) => {\n  if (store[$storeFlattened]) {\n    store[$storeFlattened].forEach(ta => {\n      if (ArrayBuffer.isView(ta)) ta[eid] = 0\n      else ta[eid].fill(0)\n    })\n  }\n}\n\nconst createTypeStore = (type, length) => {\n  const totalBytes = length * TYPES[type].BYTES_PER_ELEMENT\n  const buffer = new ArrayBuffer(totalBytes)\n  const store = new TYPES[type](buffer)\n  store[$isEidType] = type === TYPES_ENUM.eid\n  return store\n}\n\nexport const parentArray = store => store[$parentArray]\n\nconst createArrayStore = (metadata, type, length) => {\n  const storeSize = metadata[$storeSize]\n  const store = Array(storeSize).fill(0)\n  store[$storeType] = type\n  store[$isEidType] = type === TYPES_ENUM.eid\n\n  const cursors = metadata[$subarrayCursors]\n  const indexType =\n    length <= UNSIGNED_MAX.uint8\n      ? TYPES_ENUM.ui8\n      : length <= UNSIGNED_MAX.uint16\n        ? TYPES_ENUM.ui16\n        : TYPES_ENUM.ui32\n\n  if (!length) throw new Error('bitECS - Must define component array length')\n  if (!TYPES[type]) throw new Error(`bitECS - Invalid component array property type ${type}`)\n\n  // create buffer for type if it does not already exist\n  if (!metadata[$storeSubarrays][type]) {\n    const arrayElementCount = metadata[$storeArrayElementCounts][type]\n\n    // for threaded impl\n    // const summedBytesPerElement = Array(arrayCount).fill(0).reduce((a, p) => a + TYPES[type].BYTES_PER_ELEMENT, 0)\n    // const totalBytes = roundToMultiple4(summedBytesPerElement * summedLength * size)\n    // const buffer = new SharedArrayBuffer(totalBytes)\n\n    const array = new TYPES[type](roundToMultiple4(arrayElementCount * storeSize))\n    array[$indexType] = TYPES_NAMES[indexType]\n    array[$indexBytes] = TYPES[indexType].BYTES_PER_ELEMENT\n\n    metadata[$storeSubarrays][type] = array\n    \n  }\n\n  const start = cursors[type]\n  const end = start + (storeSize * length)\n  cursors[type] = end\n\n  store[$parentArray] = metadata[$storeSubarrays][type].subarray(start, end)\n\n  // pre-generate subarrays for each eid\n  for (let eid = 0; eid < storeSize; eid++) {\n    const start = length * eid\n    const end = start + length\n    store[eid] = store[$parentArray].subarray(start, end)\n    store[eid][$indexType] = TYPES_NAMES[indexType]\n    store[eid][$indexBytes] = TYPES[indexType].BYTES_PER_ELEMENT\n    store[eid][$subarray] = true\n  }\n\n  return store\n}\n\nconst isArrayType = x => Array.isArray(x) && typeof x[0] === 'string' && typeof x[1] === 'number'\n\nexport const createStore = (schema, size) => {\n  const $store = Symbol('store')\n\n  if (!schema || !Object.keys(schema).length) {\n    // tag component\n    stores[$store] = {\n      [$storeSize]: size,\n      [$tagStore]: true,\n      [$storeBase]: () => stores[$store]\n    }\n    return stores[$store]\n  }\n\n  schema = JSON.parse(JSON.stringify(schema))\n\n  const arrayElementCounts = {}\n  const collectArrayElementCounts = s => {\n    const keys = Object.keys(s)\n    for (const k of keys) {\n      if (isArrayType(s[k])) {\n        if (!arrayElementCounts[s[k][0]]) arrayElementCounts[s[k][0]] = 0\n        arrayElementCounts[s[k][0]] += s[k][1]\n      } else if (s[k] instanceof Object) {\n        collectArrayElementCounts(s[k])\n      }\n    }\n  }\n  collectArrayElementCounts(schema)\n\n  const metadata = {\n    [$storeSize]: size,\n    [$storeMaps]: {},\n    [$storeSubarrays]: {},\n    [$storeRef]: $store,\n    [$subarrayCursors]: Object.keys(TYPES).reduce((a, type) => ({ ...a, [type]: 0 }), {}),\n    [$storeFlattened]: [],\n    [$storeArrayElementCounts]: arrayElementCounts\n  }\n\n  if (schema instanceof Object && Object.keys(schema).length) {\n\n    const recursiveTransform = (a, k) => {\n\n      if (typeof a[k] === 'string') {\n\n        a[k] = createTypeStore(a[k], size)\n        a[k][$storeBase] = () => stores[$store]\n        metadata[$storeFlattened].push(a[k])\n\n      } else if (isArrayType(a[k])) {\n        \n        const [type, length] = a[k]\n        a[k] = createArrayStore(metadata, type, length)\n        a[k][$storeBase] = () => stores[$store]\n        metadata[$storeFlattened].push(a[k])\n        // Object.seal(a[k])\n\n      } else if (a[k] instanceof Object) {\n        \n        a[k] = Object.keys(a[k]).reduce(recursiveTransform, a[k])\n        // Object.seal(a[k])\n        \n      }\n\n      return a\n    }\n\n    stores[$store] = Object.assign(Object.keys(schema).reduce(recursiveTransform, schema), metadata)\n    stores[$store][$storeBase] = () => stores[$store]\n\n    // Object.seal(stores[$store])\n\n    return stores[$store]\n\n  }\n}\n\nexport const free = (store) => {\n  delete stores[store[$storeRef]]\n}","export const Uint32SparseSet = (length) => {\n  const dense = new Uint32Array(length)\n  const sparse = new Uint32Array(length)\n\n  let cursor = 0\n  dense.count = () => cursor + 1\n\n  const has = val => dense[sparse[val]] === val\n\n  const add = val => {\n    if (has(val)) return\n    sparse[val] = cursor\n    dense[cursor] = val\n\n    cursor++\n  }\n\n  const remove = val => {\n    if (!has(val)) return\n    const index = sparse[val]\n    const swapped = dense[cursor]\n    if (swapped !== val) {\n      dense[index] = swapped\n      sparse[swapped] = index\n    }\n\n    cursor--\n  }\n\n  return {\n    add,\n    remove,\n    has,\n    sparse,\n    dense,\n  }\n}\n\nexport const SparseSet = () => {\n  const dense = []\n  const sparse = []\n\n  dense.sort = function (comparator) {\n    const result = Array.prototype.sort.call(this, comparator)\n\n    for(let i = 0; i < dense.length; i++) {\n      sparse[dense[i]] = i\n    }\n    \n    return result\n  }\n\n  const has = val => dense[sparse[val]] === val\n\n  const add = val => {\n    if (has(val)) return\n    sparse[val] = dense.push(val) - 1\n  }\n\n  const remove = val => {\n    if (!has(val)) return\n    const index = sparse[val]\n    const swapped = dense.pop()\n    if (swapped !== val) {\n      dense[index] = swapped\n      sparse[swapped] = index\n    }\n  }\n\n  return {\n    add,\n    remove,\n    has,\n    sparse,\n    dense,\n  }\n}","import { $indexBytes, $indexType, $isEidType, $serializeShadow, $storeBase, $storeFlattened, $tagStore, createShadow } from \"./Storage.js\"\nimport { $componentMap, addComponent, hasComponent } from \"./Component.js\"\nimport { $entityArray, $entitySparseSet, addEntity, eidToWorld } from \"./Entity.js\"\nimport { $localEntities, $localEntityLookup } from \"./World.js\"\nimport { SparseSet } from \"./Util.js\"\n\nexport const DESERIALIZE_MODE = {\n  REPLACE: 0,\n  APPEND: 1,\n  MAP: 2\n}\n\nlet resized = false\n\nexport const setSerializationResized = v => { resized = v }\n\nconst concat = (a,v) => a.concat(v)\nconst not = fn => v => !fn(v)\n\nconst storeFlattened = c => c[$storeFlattened]\nconst isFullComponent = storeFlattened\nconst isProperty = not(isFullComponent)\n\nconst isModifier = c => typeof c === 'function'\nconst isNotModifier = not(isModifier)\n\nconst isChangedModifier = c => isModifier(c) && c()[1] === 'changed'\n\nconst isWorld = w => Object.getOwnPropertySymbols(w).includes($componentMap)\n\nconst fromModifierToComponent = c => c()[0]\n\nexport const canonicalize = target => {\n\n  if (isWorld(target)) return [[],new Map()]\n\n  // aggregate full components\n  const fullComponentProps = target\n    .filter(isNotModifier)\n    .filter(isFullComponent)\n    .map(storeFlattened).reduce(concat, [])\n  \n  // aggregate changed full components\n  const changedComponentProps = target\n    .filter(isChangedModifier).map(fromModifierToComponent)\n    .filter(isFullComponent)\n    .map(storeFlattened).reduce(concat, [])\n\n  // aggregate props\n  const props = target\n    .filter(isNotModifier)\n    .filter(isProperty)\n\n  // aggregate changed props\n  const changedProps = target\n    .filter(isChangedModifier).map(fromModifierToComponent)\n    .filter(isProperty)\n  \n  const componentProps = [...fullComponentProps, ...props, ...changedComponentProps, ...changedProps]\n  const allChangedProps = [...changedComponentProps, ...changedProps].reduce((map,prop) => {\n    const $ = Symbol()\n    createShadow(prop, $)\n    map.set(prop, $)\n    return map\n  }, new Map())\n\n  return [componentProps, allChangedProps]\n}\n\n/**\n * Defines a new serializer which targets the given components to serialize the data of when called on a world or array of EIDs.\n *\n * @param {object|array} target\n * @param {number} [maxBytes=20000000]\n * @returns {function} serializer\n */\nexport const defineSerializer = (target, maxBytes = 20000000) => {\n  const worldSerializer = isWorld(target)\n\n  let [componentProps, changedProps] = canonicalize(target)\n\n  // TODO: calculate max bytes based on target & recalc upon resize\n\n  const buffer = new ArrayBuffer(maxBytes)\n  const view = new DataView(buffer)\n\n  const entityComponentCache = new Map()\n\n  return (ents) => {\n\n    if (resized) {\n      [componentProps, changedProps] = canonicalize(target)\n      resized = false\n    }\n\n    if (worldSerializer) {\n      componentProps = []\n      target[$componentMap].forEach((c, component) => {\n        if (component[$storeFlattened])\n          componentProps.push(...component[$storeFlattened])\n        else componentProps.push(component)\n      })\n    }\n    \n    let world\n    if (Object.getOwnPropertySymbols(ents).includes($componentMap)) {\n      world = ents\n      ents = ents[$entityArray]\n    } else {\n      world = eidToWorld.get(ents[0])\n    }\n\n    let where = 0\n\n    if (!ents.length) return buffer.slice(0, where)\n\n    const cache = new Map()\n\n    // iterate over component props\n    for (let pid = 0; pid < componentProps.length; pid++) {\n      const prop = componentProps[pid]\n      const component = prop[$storeBase]()\n      const $diff = changedProps.get(prop)\n      const shadow = $diff ? prop[$diff] : null\n\n      if (!cache.has(component)) cache.set(component, new Map())\n\n      // write pid\n      view.setUint8(where, pid)\n      where += 1\n\n      // save space for entity count\n      const countWhere = where\n      where += 4\n\n      let writeCount = 0\n      // write eid,val\n      for (let i = 0; i < ents.length; i++) {\n        const eid = ents[i]\n\n        let componentCache = entityComponentCache.get(eid)\n        if (!componentCache) componentCache = entityComponentCache.set(eid, new Set()).get(eid)\n        \n        componentCache.add(eid)\n        \n        const newlyAddedComponent = \n          // if we are diffing\n          shadow \n          // and we have already iterated over this component for this entity\n          // retrieve cached value    \n          && cache.get(component).get(eid)\n          // or if entity did not have component last call\n          || !componentCache.has(component)\n          // and entity has component this call\n          && hasComponent(world, component, eid)\n\n        cache.get(component).set(eid, newlyAddedComponent)\n\n        if (newlyAddedComponent) {\n          componentCache.add(component)\n        } else if (!hasComponent(world, component, eid)) {\n          // skip if entity doesn't have this component\n          componentCache.delete(component)\n          continue\n        } \n\n        \n        const rewindWhere = where\n\n        // write eid\n        view.setUint32(where, eid)\n        where += 4\n\n        // if it's a tag store we can stop here\n        if (prop[$tagStore]) {\n          writeCount++\n          continue\n        }\n\n        // if property is an array\n        if (ArrayBuffer.isView(prop[eid])) {\n          const type = prop[eid].constructor.name.replace('Array', '')\n          const indexType = prop[eid][$indexType]\n          const indexBytes = prop[eid][$indexBytes]\n\n          // save space for count of dirty array elements\n          const countWhere2 = where\n          where += indexBytes\n\n          let arrayWriteCount = 0\n\n          // write index,value\n          for (let i = 0; i < prop[eid].length; i++) {\n\n            if (shadow) {\n\n              const changed = shadow[eid][i] !== prop[eid][i]\n              \n              // sync shadow\n              shadow[eid][i] = prop[eid][i]              \n\n              // if state has not changed since the last call\n              // todo: if newly added then entire component will serialize (instead of only changed values)\n              if (!changed && !newlyAddedComponent) {\n                // skip writing this value\n                continue\n              }\n            }\n            \n            // write array index\n            view[`set${indexType}`](where, i)\n            where += indexBytes\n            \n            // write value at that index\n            const value = prop[eid][i]\n            view[`set${type}`](where, value)\n            where += prop[eid].BYTES_PER_ELEMENT\n            arrayWriteCount++\n          }\n\n          if (arrayWriteCount > 0) {\n            // write total element count\n            view[`set${indexType}`](countWhere2, arrayWriteCount)\n            writeCount++\n          } else {\n            where = rewindWhere\n            continue\n          }\n        } else {\n\n          if (shadow) {\n\n            const changed = shadow[eid] !== prop[eid]\n\n            shadow[eid] = prop[eid]\n\n            // do not write value if diffing and no change\n            if (!changed && !newlyAddedComponent) {\n              // rewind the serializer\n              where = rewindWhere\n              // skip writing this value\n              continue\n            }\n\n          }  \n\n\n          const type = prop.constructor.name.replace('Array', '')\n          // set value next [type] bytes\n          view[`set${type}`](where, prop[eid])\n          where += prop.BYTES_PER_ELEMENT\n\n          writeCount++\n        }\n      }\n\n      if (writeCount > 0) {\n        // write how many eid/value pairs were written\n        view.setUint32(countWhere, writeCount)\n      } else {\n        // if nothing was written (diffed with no changes) \n        // then move cursor back 5 bytes (remove PID and countWhere space)\n        where -= 5\n      }\n    }\n    return buffer.slice(0, where)\n  }\n}\n\nconst newEntities = new Map()\n\n/**\n * Defines a new deserializer which targets the given components to deserialize onto a given world.\n *\n * @param {object|array} target\n * @returns {function} deserializer\n */\nexport const defineDeserializer = (target) => {\n  const isWorld = Object.getOwnPropertySymbols(target).includes($componentMap)\n  let [componentProps] = canonicalize(target)\n\n  const deserializedEntities = new Set()\n\n  return (world, packet, mode=0) => {\n\n    newEntities.clear()\n    \n    if (resized) {\n      [componentProps] = canonicalize(target)\n      resized = false\n    }\n\n    if (isWorld) {\n      componentProps = []\n      target[$componentMap].forEach((c, component) => {\n        if (component[$storeFlattened])\n          componentProps.push(...component[$storeFlattened])\n        else componentProps.push(component)\n      })\n    }\n\n    const localEntities = world[$localEntities]\n    const localEntityLookup = world[$localEntityLookup]\n\n    const view = new DataView(packet)\n    let where = 0\n\n    while (where < packet.byteLength) {\n\n      // pid\n      const pid = view.getUint8(where)\n      where += 1\n\n      // entity count\n      const entityCount = view.getUint32(where)\n      where += 4\n\n      // component property\n      const prop = componentProps[pid]\n\n      // Get the entities and set their prop values\n      for (let i = 0; i < entityCount; i++) {\n        let eid = view.getUint32(where) // throws with [changed, c, changed]\n        where += 4\n\n        if (mode === DESERIALIZE_MODE.MAP) {\n          if (localEntities.has(eid)) {\n            eid = localEntities.get(eid)\n          } else if (newEntities.has(eid)) {\n            eid = newEntities.get(eid)\n          } else {\n            const newEid = addEntity(world)\n            localEntities.set(eid, newEid)\n            localEntityLookup.set(newEid, eid)\n            newEntities.set(eid, newEid)\n            eid = newEid\n          }\n        }\n\n        if (mode === DESERIALIZE_MODE.APPEND ||  \n          mode === DESERIALIZE_MODE.REPLACE && !world[$entitySparseSet].has(eid)\n        ) {\n          const newEid = newEntities.get(eid) || addEntity(world)\n          newEntities.set(eid, newEid)\n          eid = newEid\n        }\n\n        const component = prop[$storeBase]()\n        if (!hasComponent(world, component, eid)) {\n          addComponent(world, component, eid)\n        }\n\n        // add eid to deserialized ents after it has been transformed by MAP mode\n        deserializedEntities.add(eid)\n\n        if (component[$tagStore]) {\n          continue\n        }\n        \n        if (ArrayBuffer.isView(prop[eid])) {\n          const array = prop[eid]\n          const count = view[`get${array[$indexType]}`](where)\n          where += array[$indexBytes]\n\n          // iterate over count\n          for (let i = 0; i < count; i++) {\n            const index = view[`get${array[$indexType]}`](where)\n            where += array[$indexBytes]\n\n            const value = view[`get${array.constructor.name.replace('Array', '')}`](where)\n            where += array.BYTES_PER_ELEMENT\n            if (prop[$isEidType]) {\n              let localEid\n              if (localEntities.has(value)) {\n                localEid = localEntities.get(value)\n              } else if (newEntities.has(value)) {\n                localEid = newEntities.get(value)\n              } else {\n                const newEid = addEntity(world)\n                localEntities.set(value, newEid)\n                localEntityLookup.set(newEid, value)\n                newEntities.set(value, newEid)\n                localEid = newEid\n              }\n              prop[eid][index] = localEid\n            } else prop[eid][index] = value\n          }\n        } else {\n          const value = view[`get${prop.constructor.name.replace('Array', '')}`](where)\n          where += prop.BYTES_PER_ELEMENT\n\n          if (prop[$isEidType]) {\n            let localEid\n            if (localEntities.has(value)) {\n              localEid = localEntities.get(value)\n            } else if (newEntities.has(value)) {\n              localEid = newEntities.get(value)\n            } else {\n              const newEid = addEntity(world)\n              localEntities.set(value, newEid)\n              localEntityLookup.set(newEid, value)\n              newEntities.set(value, newEid)\n              localEid = newEid\n            }\n            prop[eid] = localEid\n          } else prop[eid] = value\n        }\n      }\n    }\n\n    const ents = Array.from(deserializedEntities)\n\n    deserializedEntities.clear()\n\n    return ents\n  }\n}","import { resizeComponents } from './Component.js'\nimport { $notQueries, $queries, queryAddEntity, queryCheckEntity, queryRemoveEntity } from './Query.js'\nimport { $localEntities, $localEntityLookup, resizeWorlds } from './World.js'\nimport { setSerializationResized } from './Serialize.js'\n\nexport const $entityMasks = Symbol('entityMasks')\nexport const $entityComponents = Symbol('entityComponents')\nexport const $entitySparseSet = Symbol('entitySparseSet')\nexport const $entityArray = Symbol('entityArray')\nexport const $entityIndices = Symbol('entityIndices')\nexport const $removedEntities = Symbol('removedEntities')\n\nlet defaultSize = 100000\n\n// need a global EID cursor which all worlds and all components know about\n// so that world entities can posess entire rows spanning all component tables\nlet globalEntityCursor = 0\nlet globalSize = defaultSize\nlet resizeThreshold = () => globalSize - (globalSize / 5)\n\nexport const getGlobalSize = () => globalSize\n\n// removed eids should also be global to prevent memory leaks\nconst removed = []\n\nexport const resetGlobals = () => {\n  globalSize = defaultSize\n  globalEntityCursor = 0\n  removed.length = 0\n}\n\nexport const getDefaultSize = () => defaultSize\n\n/**\n * Sets the default maximum number of entities for worlds and component stores.\n *\n * @param {number} newSize\n */\nexport const setDefaultSize = newSize => { \n  const oldSize = globalSize\n\n  defaultSize = newSize\n  resetGlobals()\n\n  globalSize = newSize\n  resizeWorlds(newSize)\n  resizeComponents(newSize)\n  setSerializationResized(true)\n\n  console.info(`👾 bitECS - resizing all data stores from ${oldSize} to ${newSize}`)\n}\n\nexport const getEntityCursor = () => globalEntityCursor\nexport const getRemovedEntities = () => removed\n\nexport const eidToWorld = new Map()\n\n/**\n * Adds a new entity to the specified world.\n *\n * @param {World} world\n * @returns {number} eid\n */\nexport const addEntity = (world) => {\n\n  // if data stores are 80% full\n  if (globalEntityCursor >= resizeThreshold()) {\n    // grow by half the original size rounded up to a multiple of 4\n    const size = globalSize\n    const amount = Math.ceil((size/2) / 4) * 4\n    setDefaultSize(size + amount)\n  }\n  \n  const eid = removed.length > Math.round(defaultSize * 0.01) ? removed.shift() : globalEntityCursor++\n  \n  world[$entitySparseSet].add(eid)\n  eidToWorld.set(eid, world)\n\n  world[$notQueries].forEach(q => {\n    const match = queryCheckEntity(world, q, eid)\n    if (match) queryAddEntity(q, eid)\n  })\n\n  world[$entityComponents].set(eid, new Set())\n\n  return eid\n}\n\n/**\n * Removes an existing entity from the specified world.\n *\n * @param {World} world\n * @param {number} eid\n */\nexport const removeEntity = (world, eid) => {\n  // Check if entity is already removed\n  if (!world[$entitySparseSet].has(eid)) return\n\n  // Remove entity from all queries\n  // TODO: archetype graph\n  world[$queries].forEach(q => {\n    queryRemoveEntity(world, q, eid)\n  })\n\n  // Free the entity\n  removed.push(eid)\n\n  // remove all eid state from world\n  world[$entitySparseSet].remove(eid)\n  world[$entityComponents].delete(eid)\n\n  // remove from deserializer mapping\n  world[$localEntities].delete(world[$localEntityLookup].get(eid))\n  world[$localEntityLookup].delete(eid)\n\n  // Clear entity bitmasks\n  for (let i = 0; i < world[$entityMasks].length; i++) world[$entityMasks][i][eid] = 0\n}\n\n/**\n *  Returns an array of components that an entity possesses.\n *\n * @param {*} world\n * @param {*} eid\n */\nexport const getEntityComponents = (world, eid) => {\n  if (eid === undefined) throw new Error('bitECS - entity is undefined.')\n  if (!world[$entitySparseSet].has(eid)) throw new Error('bitECS - entity does not exist in the world.')\n  return Array.from(world[$entityComponents].get(eid))\n}\n\n/**\n * Checks the existence of an entity in a world\n * \n * @param {World} world \n * @param {number} eid \n */\nexport const entityExists = (world, eid) => world[$entitySparseSet].has(eid)","import { SparseSet } from './Util.js'\nimport { $queryShadow, $storeFlattened, $tagStore, createShadow } from './Storage.js'\nimport { $componentMap, registerComponent } from './Component.js'\nimport { $entityMasks, $entityArray, getEntityCursor, $entitySparseSet } from './Entity.js'\n\n\n\nexport function Not(c) { return () => [c, 'not'] }\nexport function Or(c) { return () => [c, 'or'] }\nexport function Changed(c) { return () => [c, 'changed'] }\n\nexport function Any(...comps) { return function QueryAny() { return comps } }\nexport function All(...comps) { return function QueryAll() { return comps } }\nexport function None(...comps) { return function QueryNone() { return comps } }\n\nexport const $queries = Symbol('queries')\nexport const $notQueries = Symbol('notQueries')\n\nexport const $queryAny = Symbol('queryAny')\nexport const $queryAll = Symbol('queryAll')\nexport const $queryNone = Symbol('queryNone')\n\nexport const $queryMap = Symbol('queryMap')\nexport const $dirtyQueries = Symbol('$dirtyQueries')\nexport const $queryComponents = Symbol('queryComponents')\nexport const $enterQuery = Symbol('enterQuery')\nexport const $exitQuery = Symbol('exitQuery')\n\n/**\n * Given an existing query, returns a new function which returns entities who have been added to the given query since the last call of the function.\n *\n * @param {function} query\n * @returns {function} enteredQuery\n */\nexport const enterQuery = query => world => {\n  if (!world[$queryMap].has(query)) registerQuery(world, query)\n  const q = world[$queryMap].get(query)\n  // queryCommitRemovals(q)\n  const entered = q.entered.dense.slice()\n  q.entered = SparseSet()\n  return entered\n}\n\n/**\n * Given an existing query, returns a new function which returns entities who have been removed from the given query since the last call of the function.\n *\n * @param {function} query\n * @returns {function} enteredQuery\n */\nexport const exitQuery = query => world => {\n  if (!world[$queryMap].has(query)) registerQuery(world, query)\n  const q = world[$queryMap].get(query)\n  // queryCommitRemovals(q)\n  const exited = q.exited.dense.slice()\n  q.exited = SparseSet()\n  return exited\n}\n\nexport const registerQuery = (world, query) => {\n\n  const components = []\n  const notComponents = []\n  const changedComponents = []\n\n  query[$queryComponents].forEach(c => {\n    if (typeof c === 'function') {\n      const [comp, mod] = c()\n      if (!world[$componentMap].has(comp)) registerComponent(world, comp)\n      if (mod === 'not') {\n        notComponents.push(comp)\n      }\n      if (mod === 'changed') {\n        changedComponents.push(comp)\n        components.push(comp)\n      }\n      // if (mod === 'all') {\n      //   allComponents.push(comp)\n      // }\n      // if (mod === 'any') {\n      //   anyComponents.push(comp)\n      // }\n      // if (mod === 'none') {\n      //   noneComponents.push(comp)\n      // }\n    } else {\n      if (!world[$componentMap].has(c)) registerComponent(world, c)\n      components.push(c)\n    }\n  })\n\n\n  const mapComponents = c => world[$componentMap].get(c)\n\n  const allComponents = components.concat(notComponents).map(mapComponents)\n\n  // const sparseSet = Uint32SparseSet(getGlobalSize())\n  const sparseSet = SparseSet()\n\n  const archetypes = []\n  // const changed = SparseSet()\n  const changed = []\n  const toRemove = SparseSet()\n  const entered = SparseSet()\n  const exited = SparseSet()\n\n  const generations = allComponents\n    .map(c => c.generationId)\n    .reduce((a,v) => {\n      if (a.includes(v)) return a\n      a.push(v)\n      return a\n    }, [])\n\n  const reduceBitflags = (a,c) => {\n    if (!a[c.generationId]) a[c.generationId] = 0\n    a[c.generationId] |= c.bitflag\n    return a\n  }\n  const masks = components\n    .map(mapComponents)\n    .reduce(reduceBitflags, {})\n\n  const notMasks = notComponents\n    .map(mapComponents)\n    .reduce(reduceBitflags, {})\n\n  // const orMasks = orComponents\n  //   .map(mapComponents)\n  //   .reduce(reduceBitmasks, {})\n\n  const hasMasks = allComponents\n    .reduce(reduceBitflags, {})\n\n  const flatProps = components\n    .filter(c => !c[$tagStore])\n    .map(c => Object.getOwnPropertySymbols(c).includes($storeFlattened) ? c[$storeFlattened] : [c])\n    .reduce((a,v) => a.concat(v), [])\n\n  const shadows = []\n\n  const q = Object.assign(sparseSet, {\n    archetypes,\n    changed,\n    components,\n    notComponents,\n    changedComponents,\n    allComponents,\n    masks,\n    notMasks,\n    // orMasks,\n    hasMasks,\n    generations,\n    flatProps,\n    toRemove,\n    entered,\n    exited,\n    shadows,\n  })\n\n  world[$queryMap].set(query, q)\n  world[$queries].add(q)\n  \n  allComponents.forEach(c => {\n    c.queries.add(q)\n  })\n\n  if (notComponents.length) world[$notQueries].add(q)\n\n  for (let eid = 0; eid < getEntityCursor(); eid++) {\n    if (!world[$entitySparseSet].has(eid)) continue\n    const match = queryCheckEntity(world, q, eid)\n    if (match) queryAddEntity(q, eid)\n  }\n}\n\nconst generateShadow = (q, pid) => {\n  const $ = Symbol()\n  const prop = q.flatProps[pid]\n  createShadow(prop, $)\n  q.shadows[pid] = prop[$]\n  return prop[$]\n}\n\nconst diff = (q, clearDiff) => {\n  if (clearDiff) q.changed = []\n  const { flatProps, shadows } = q\n  for (let i = 0; i < q.dense.length; i++) {\n    const eid = q.dense[i]\n    let dirty = false\n    for (let pid = 0; pid < flatProps.length; pid++) {\n      const prop = flatProps[pid]\n      const shadow = shadows[pid] || generateShadow(q, pid)\n      if (ArrayBuffer.isView(prop[eid])) {\n        for (let i = 0; i < prop[eid].length; i++) {\n          if (prop[eid][i] !== shadow[eid][i]) {\n            dirty = true\n            break\n          }\n        }\n        shadow[eid].set(prop[eid])\n      } else {\n        if (prop[eid] !== shadow[eid]) {\n          dirty = true\n          shadow[eid] = prop[eid]\n        }\n      }\n    }\n    if (dirty) q.changed.push(eid)\n  }\n  return q.changed\n}\n\n// const queryEntityChanged = (q, eid) => {\n//   if (q.changed.has(eid)) return\n//   q.changed.add(eid)\n// }\n\n// export const entityChanged = (world, component, eid) => {\n//   const { changedQueries } = world[$componentMap].get(component)\n//   changedQueries.forEach(q => {\n//     const match = queryCheckEntity(world, q, eid)\n//     if (match) queryEntityChanged(q, eid)\n//   })\n// }\n\nconst flatten = (a,v) => a.concat(v)\n\nconst aggregateComponentsFor = mod => x => x.filter(f => f.name === mod().constructor.name).reduce(flatten)\n\nconst getAnyComponents = aggregateComponentsFor(Any)\nconst getAllComponents = aggregateComponentsFor(All)\nconst getNoneComponents = aggregateComponentsFor(None)\n\n/**\n * Defines a query function which returns a matching set of entities when called on a world.\n *\n * @param {array} components\n * @returns {function} query\n */\n\nexport const defineQuery = (...args) => {\n  let components\n  let any, all, none\n  if (Array.isArray(args[0])) {\n    components = args[0]\n  } else {\n    // any = getAnyComponents(args)\n    // all = getAllComponents(args)\n    // none = getNoneComponents(args)\n  }\n  \n\n  if (components === undefined || components[$componentMap] !== undefined) {\n    return world => world ? world[$entityArray] : components[$entityArray]\n  }\n\n  const query = function (world, clearDiff=true) {\n    if (!world[$queryMap].has(query)) registerQuery(world, query)\n\n    const q = world[$queryMap].get(query)\n\n    commitRemovals(world)\n\n    if (q.changedComponents.length) return diff(q, clearDiff)\n    // if (q.changedComponents.length) return q.changed.dense\n\n    return q.dense\n  }\n\n  query[$queryComponents] = components\n  query[$queryAny] = any\n  query[$queryAll] = all\n  query[$queryNone] = none\n\n  return query\n}\n\nconst bin = value => {\n  if (!Number.isSafeInteger(value)) {\n    throw new TypeError('value must be a safe integer');\n  }\n\n  const negative = value < 0;\n  const twosComplement = negative ? Number.MAX_SAFE_INTEGER + value + 1 : value;\n  const signExtend = negative ? '1' : '0';\n\n  return twosComplement.toString(2).padStart(4, '0').padStart(0, signExtend);\n}\n\n// TODO: archetype graph\nexport const queryCheckEntity = (world, q, eid) => {\n  const { masks, notMasks, generations } = q\n  let or = 0\n  for (let i = 0; i < generations.length; i++) {\n    const generationId = generations[i]\n    const qMask = masks[generationId]\n    const qNotMask = notMasks[generationId]\n    // const qOrMask = orMasks[generationId]\n    const eMask = world[$entityMasks][generationId][eid]\n    \n    // any\n    // if (qOrMask && (eMask & qOrMask) !== qOrMask) {\n    //   continue\n    // }\n    // not all \n    // if (qNotMask && (eMask & qNotMask) === qNotMask) {\n    // }\n    // not any\n    if (qNotMask && (eMask & qNotMask) !== 0) {\n      return false\n    }\n    // all\n    if (qMask && (eMask & qMask) !== qMask) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const queryCheckComponent = (q, c) => {\n  const { generationId, bitflag } = c\n  const { hasMasks } = q\n  const mask = hasMasks[generationId]\n  return (mask & bitflag) === bitflag\n}\n\nexport const queryAddEntity = (q, eid) => {\n  q.toRemove.remove(eid)\n  // if (!q.has(eid)) \n  q.entered.add(eid)\n  q.add(eid)\n}\n\nconst queryCommitRemovals = (q) => {\n  for (let i = q.toRemove.dense.length-1; i >= 0; i--) {\n    const eid = q.toRemove.dense[i]\n    q.toRemove.remove(eid)\n    q.remove(eid)\n  }\n}\n\nexport const commitRemovals = (world) => {\n  if (!world[$dirtyQueries].size) return\n  world[$dirtyQueries].forEach(queryCommitRemovals)\n  world[$dirtyQueries].clear()\n}\n\nexport const queryRemoveEntity = (world, q, eid) => {\n  if (!q.has(eid) || q.toRemove.has(eid)) return\n  q.toRemove.add(eid)\n  world[$dirtyQueries].add(q)\n  q.exited.add(eid)\n}\n\n\n/**\n * Resets a Changed-based query, clearing the underlying list of changed entities.\n *\n * @param {World} world\n * @param {function} query\n */\nexport const resetChangedQuery = (world, query) => {\n  const q = world[$queryMap].get(query)\n  q.changed = []\n}\n\n/**\n * Removes a query from a world.\n *\n * @param {World} world\n * @param {function} query\n */\nexport const removeQuery = (world, query) => {\n  const q = world[$queryMap].get(query)\n  world[$queries].delete(q)\n  world[$queryMap].delete(query)\n}","import { $storeSize, createStore, resetStoreFor, resizeStore } from './Storage.js'\nimport { $queries, queryAddEntity, queryRemoveEntity, queryCheckEntity, commitRemovals } from './Query.js'\nimport { $bitflag, $size } from './World.js'\nimport { $entityMasks, getDefaultSize, eidToWorld, $entityComponents, getGlobalSize, $entitySparseSet } from './Entity.js'\n\nexport const $componentMap = Symbol('componentMap')\n\nexport const components = []\n\nexport const resizeComponents = (size) => {\n  components.forEach(component => resizeStore(component, size))\n}\n\n\n/**\n * Defines a new component store.\n *\n * @param {object} schema\n * @returns {object}\n */\nexport const defineComponent = (schema, size) => {\n  const component = createStore(schema, size || getGlobalSize())\n  if (schema && Object.keys(schema).length) components.push(component)\n  return component\n}\n\nexport const incrementBitflag = (world) => {\n  world[$bitflag] *= 2\n  if (world[$bitflag] >= 2**31) {\n    world[$bitflag] = 1\n    world[$entityMasks].push(new Uint32Array(world[$size]))\n  }\n}\n\n\n/**\n * Registers a component with a world.\n *\n * @param {World} world\n * @param {Component} component\n */\nexport const registerComponent = (world, component) => {\n  if (!component) throw new Error(`bitECS - Cannot register null or undefined component`)\n\n  const queries = new Set()\n  const notQueries = new Set()\n  const changedQueries = new Set()\n\n  world[$queries].forEach(q => {\n    if (q.allComponents.includes(component)) {\n      queries.add(q)\n    }\n  })\n\n  world[$componentMap].set(component, { \n    generationId: world[$entityMasks].length - 1,\n    bitflag: world[$bitflag],\n    store: component,\n    queries,\n    notQueries,\n    changedQueries,\n  })\n\n  if (component[$storeSize] < getGlobalSize()) {\n    resizeStore(component, getGlobalSize())\n  }\n\n  incrementBitflag(world)\n}\n\n/**\n * Registers multiple components with a world.\n *\n * @param {World} world\n * @param {Component} components\n */\nexport const registerComponents = (world, components) => {\n  components.forEach(c => registerComponent(world, c))\n}\n\n/**\n * Checks if an entity has a component.\n *\n * @param {World} world\n * @param {Component} component\n * @param {number} eid\n * @returns {boolean}\n */\nexport const hasComponent = (world, component, eid) => {\n  const registeredComponent = world[$componentMap].get(component)\n  if (!registeredComponent) return false\n  const { generationId, bitflag } = registeredComponent\n  const mask = world[$entityMasks][generationId][eid]\n  return (mask & bitflag) === bitflag\n}\n\n/**\n * Adds a component to an entity\n *\n * @param {World} world\n * @param {Component} component\n * @param {number} eid\n * @param {boolean} [reset=false]\n */\nexport const addComponent = (world, component, eid, reset=false) => {\n  if (eid === undefined) throw new Error('bitECS - entity is undefined.')\n  if (!world[$entitySparseSet].has(eid)) throw new Error('bitECS - entity does not exist in the world.')\n  if (!world[$componentMap].has(component)) registerComponent(world, component)\n  if (hasComponent(world, component, eid)) return\n\n  const c = world[$componentMap].get(component)\n  const { generationId, bitflag, queries, notQueries } = c\n    \n  // Add bitflag to entity bitmask\n  world[$entityMasks][generationId][eid] |= bitflag\n\n  // todo: archetype graph\n  queries.forEach(q => {\n    // remove this entity from toRemove if it exists in this query\n    if (q.toRemove.has(eid)) q.toRemove.remove(eid)\n    const match = queryCheckEntity(world, q, eid)\n    if (match) queryAddEntity(q, eid)\n    if (!match) queryRemoveEntity(world, q, eid)\n  })\n\n  world[$entityComponents].get(eid).add(component)\n\n  // Zero out each property value\n  if (reset) resetStoreFor(component, eid)\n}\n\n/**\n * Removes a component from an entity and resets component state unless otherwise specified.\n *\n * @param {World} world\n * @param {Component} component\n * @param {number} eid\n * @param {boolean} [reset=true]\n */\nexport const removeComponent = (world, component, eid, reset=true) => {\n  if (eid === undefined) throw new Error('bitECS - entity is undefined.')\n  if (!world[$entitySparseSet].has(eid)) throw new Error('bitECS - entity does not exist in the world.')\n  if (!hasComponent(world, component, eid)) return\n\n  const c = world[$componentMap].get(component)\n  const { generationId, bitflag, queries } = c\n\n  // Remove flag from entity bitmask\n  world[$entityMasks][generationId][eid] &= ~bitflag\n  \n  // todo: archetype graph\n  queries.forEach(q => {\n    // remove this entity from toRemove if it exists in this query\n    if (q.toRemove.has(eid)) q.toRemove.remove(eid)\n    const match = queryCheckEntity(world, q, eid)\n    if (match) queryAddEntity(q, eid)\n    if (!match) queryRemoveEntity(world, q, eid)\n  })\n\n  world[$entityComponents].get(eid).delete(component)\n\n  // Zero out each property value\n  if (reset) resetStoreFor(component, eid)\n}\n","import { $componentMap } from './Component.js'\nimport { $queryMap, $queries, $dirtyQueries, $notQueries } from './Query.js'\nimport { $entityArray, $entityComponents, $entityMasks, $entitySparseSet, getGlobalSize, removeEntity } from './Entity.js'\nimport { resize } from './Storage.js'\nimport { SparseSet } from './Util.js'\n\nexport const $size = Symbol('size')\nexport const $resizeThreshold = Symbol('resizeThreshold')\nexport const $bitflag = Symbol('bitflag')\nexport const $archetypes = Symbol('archetypes')\nexport const $localEntities = Symbol('localEntities')\nexport const $localEntityLookup = Symbol('localEntityLookp')\n\nexport const worlds = []\n\nexport const resizeWorlds = (size) => {\n  worlds.forEach(world => {\n    world[$size] = size\n\n    for (let i = 0; i < world[$entityMasks].length; i++) {\n      const masks = world[$entityMasks][i];\n      world[$entityMasks][i] = resize(masks, size)\n    }\n    \n    world[$resizeThreshold] = world[$size] - (world[$size] / 5)\n  })\n}\n\n/**\n * Creates a new world.\n *\n * @returns {object}\n */\nexport const createWorld = (...args) => {\n  const world = typeof args[0] === 'object'\n    ? args[0]\n    : {}\n  const size = typeof args[0] === 'number' \n    ? args[0] \n    : typeof args[1] === 'number' \n      ? args[1] \n      : getGlobalSize()\n  resetWorld(world, size)\n  worlds.push(world)\n  return world\n}\n\n/**\n * Resets a world.\n *\n * @param {World} world\n * @returns {object}\n */\nexport const resetWorld = (world, size = getGlobalSize()) => {\n  world[$size] = size\n\n  if (world[$entityArray]) world[$entityArray].forEach(eid => removeEntity(world, eid))\n\n  world[$entityMasks] = [new Uint32Array(size)]\n  world[$entityComponents] = new Map()\n  world[$archetypes] = []\n\n  world[$entitySparseSet] = SparseSet()\n  world[$entityArray] = world[$entitySparseSet].dense\n\n  world[$bitflag] = 1\n\n  world[$componentMap] = new Map()\n\n  world[$queryMap] = new Map()\n  world[$queries] = new Set()\n  world[$notQueries] = new Set()\n  world[$dirtyQueries] = new Set()\n\n  world[$localEntities] = new Map()\n  world[$localEntityLookup] = new Map()\n\n  return world\n}\n\n/**\n * Deletes a world.\n *\n * @param {World} world\n */\nexport const deleteWorld = (world) => {\n  Object.getOwnPropertySymbols(world).forEach($ => { delete world[$] })\n  Object.keys(world).forEach(key => { delete world[key] })\n  worlds.splice(worlds.indexOf(world), 1)\n}\n\n/**\n * Returns all components registered to a world\n * \n * @param {World} world \n * @returns Array\n */\nexport const getWorldComponents = (world) => Array.from(world[$componentMap].keys())\n\n/**\n * Returns all existing entities in a world\n * \n * @param {World} world \n * @returns Array\n */\nexport const getAllEntities = (world) => world[$entitySparseSet].dense.slice(0)","/**\n * Defines a new system function.\n *\n * @param {function} update\n * @returns {function}\n */\n export const defineSystem = (update) => (world, ...args) => {\n  update(world, ...args)\n  return world\n}","import { createWorld, resetWorld, deleteWorld, getWorldComponents } from './World.js'\nimport { addEntity, removeEntity, setDefaultSize, getEntityComponents, entityExists } from './Entity.js'\nimport { defineComponent, registerComponent, registerComponents, hasComponent, addComponent, removeComponent } from './Component.js'\nimport { defineSystem } from './System.js'\nimport { defineQuery, enterQuery, exitQuery, Changed, Not, commitRemovals, resetChangedQuery, removeQuery } from './Query.js'\nimport { defineSerializer, defineDeserializer, DESERIALIZE_MODE } from './Serialize.js'\nimport { parentArray } from './Storage.js'\nimport { TYPES_ENUM } from './Constants.js'\n\nexport const pipe = (...fns) => (input) => {\n  let tmp = input\n  for (let i = 0; i < fns.length; i++) {\n    const fn = fns[i]\n    tmp = fn(tmp)\n  }\n  return tmp\n}\n\nexport const Types = TYPES_ENUM\n\nexport {\n\n  setDefaultSize,\n  createWorld,\n  resetWorld,\n  deleteWorld,\n  addEntity,\n  removeEntity,\n  entityExists,\n  getWorldComponents,\n  \n  registerComponent,\n  registerComponents,\n  defineComponent,\n  addComponent,\n  removeComponent,\n  hasComponent,\n  getEntityComponents,\n\n  defineQuery,\n  Changed,\n  Not,\n  enterQuery,\n  exitQuery,\n  commitRemovals,\n  resetChangedQuery,\n  removeQuery,\n\n  defineSystem,\n  \n  defineSerializer,\n  defineDeserializer,\n  DESERIALIZE_MODE,\n\n  parentArray,\n\n}\n","import { addComponent, addEntity, Component } from 'bitecs';\nimport { EventEmitter } from 'eventemitter3';\nimport World from './world';\n\nexport default class Entity extends EventEmitter {\n\tworld: World;\n\teid: number;\n\n\t// Position\n\tget x()    { return this.world.components.position.x[this.eid]; }\n\tset x(val) { this.world.components.position.x[this.eid] = val; }\n\tget y()    { return this.world.components.position.y[this.eid]; }\n\tset y(val) { this.world.components.position.y[this.eid] = val; }\n\tget width()    { return this.world.components.position.width[this.eid]; }\n\tset width(val) { this.world.components.position.width[this.eid] = val; }\n\tget height()    { return this.world.components.position.height[this.eid]; }\n\tset height(val) { this.world.components.position.height[this.eid] = val; }\n\n\t// Health\n\tget shields()    { return this.world.components.health.shields[this.eid]; }\n\tset shields(val) { this.world.components.health.shields[this.eid] = val; }\n\tget maxShields()    { return this.world.components.health.maxShields[this.eid]; }\n\tset maxShields(val) { this.world.components.health.maxShields[this.eid] = val; }\n\tget timeToRegenerateShields()    { return this.world.components.health.timeToRegenerateShields[this.eid]; }\n\tset timeToRegenerateShields(val) { this.world.components.health.timeToRegenerateShields[this.eid] = val; }\n\tget timeSinceShieldRegeneration()    { return this.world.components.health.timeSinceShieldRegeneration[this.eid]; }\n\tset timeSinceShieldRegeneration(val) { this.world.components.health.timeSinceShieldRegeneration[this.eid] = val; }\n\tget timeSinceTakenDamage()    { return this.world.components.health.timeSinceTakenDamage[this.eid]; }\n\tset timeSinceTakenDamage(val) { this.world.components.health.timeSinceTakenDamage[this.eid] = val; }\n\tget dead()    { return this.world.components.health.shields[this.eid]; }\n\tset dead(val) { this.world.components.health.shields[this.eid] = val; }\n\n\ttype = 'entity';\n\tkey = 'boid';\n\n\tconstructor(world: World) {\n\t\tsuper();\n\t\tthis.eid = addEntity(world.ecs);\n\t\tthis.world = world;\n\n\t\tthis.addComponent(world.components.position);\n\t\tthis.addComponent(world.components.health);\n\n\t\tthis.shields = 1;\n\t\tthis.maxShields = 1;\n\t\tthis.timeToRegenerateShields = 1;\n\t\tthis.timeSinceShieldRegeneration = 0;\n\t\tthis.timeSinceTakenDamage = 0;\n\t\tthis.dead = 0;\n\t}\n\n\tload(config: any) {\n\t\t// TODO: Need a way which does not rely on manually setup get/set.  Maybe in our own system define how it is serialized as part of the component registration?\n\t\tObject.keys(config).forEach((key: string) => {\n\t\t\t// @ts-expect-error\n\t\t\tthis[key] = config[key];\n\t\t});\n\t}\n\n\tset(component: 'string', name: 'string', value: any) {\n\t\t// @ts-expect-error\n\t\tthis.world.components[component][name][this.eid] = value;\n\t}\n\n\tprotected addComponent(component: Component) {\n\t\taddComponent(this.world.ecs, component, this.eid);\n\t}\n}","import Entity from './entity';\nimport World from './world';\n\nexport default class Station extends Entity {\n\tget color()    { return this.world.components.controller.color[this.eid]; }\n\tset color(val) { this.world.components.controller.color[this.eid] = val; }\n\tget money()    { return this.world.components.controller.money[this.eid]; }\n\tset money(val) { this.world.components.controller.money[this.eid] = val; }\n\n\tconstructor(world: World) {\n\t\tsuper(world);\n\t\tthis.addComponent(world.components.controller);\n\n\t\tthis.key = 'station';\n\t\tthis.width = 20;\n\t\tthis.height = 20;\n\t\tthis.shields = 2;\n\t\tthis.maxShields = 2;\n\t\tthis.timeToRegenerateShields = 5;\n\t}\n}","import Entity from './entity';\nimport Station from './station';\n\nexport default class Ship extends Entity {\n\tget color()    { return this.world.components.controller.color[this.world.components.controlled.owner[this.eid]]; }\n\n\tget velocityX()    { return this.world.components.velocity.x[this.eid]; }\n\tset velocityX(val) { this.world.components.velocity.x[this.eid] = val; }\n\tget velocityY()    { return this.world.components.velocity.y[this.eid]; }\n\tset velocityY(val) { this.world.components.velocity.y[this.eid] = val; }\n\n\tget station() { return this.world.getEntity(this.eid); }\n\n\tconstructor(station: Station) {\n\t\tsuper(station.world);\n\n\t\tlet world = station.world;\n\t\tthis.addComponent(world.components.velocity);\n\t\tthis.addComponent(world.components.controlled);\n\t\tthis.addComponent(world.components.attack);\n\t\t\n\t\tthis.width = 10;\n\t\tthis.height = 5;\n\t\tthis.shields = 1;\n\t\tthis.maxShields = 1;\n\t\tthis.timeToRegenerateShields = 1;\n\t\tthis.world.components.velocity.speed[this.eid] = 100;\n\t\tworld.components.controlled.owner[this.eid] = station.eid;\n\t}\n}","import computeAngle from '@/math/compute-angle';\nimport { defineQuery, IWorld } from 'bitecs';\nimport Ship from '../entities/ship';\nimport Station from '../entities/station';\nimport World from '../entities/world';\n\nexport default function spawnShipSystem(world: World) {\n\tconst controller = world.components.controller;\n\tconst health = world.components.health;\n\tlet stationQuery = defineQuery([controller]);\n\n\treturn (ecs: IWorld) => {\n\t\t// TODO: Remove dependency on our containers so this could realistically be running in a simple worker with just duplicated data\n\t\tlet stations = stationQuery(ecs).filter(eid => !health.dead[eid]);\n\t\tstations.forEach(stationEid => {\n\t\t\tlet station = world.getEntity(stationEid) as Station;\n\t\t\tif(controller.money[stationEid] > 0) {\n\t\t\t\tlet ship = new Ship(station);\n\t\t\t\tship.x = station.x;\n\t\t\t\tship.y = station.y;\n\t\t\t\tship.velocityX = (Math.random() > 0.5 ? -1 : 1) * Math.random() * world.components.velocity.speed[ship.eid];\n\t\t\t\tship.velocityY = (Math.random() > 0.5 ? -1 : 1) * Math.random() * world.components.velocity.speed[ship.eid];\n\t\t\t\tworld.components.position.angle[ship.eid] = computeAngle(ship.velocityX, ship.velocityY);\n\n\t\t\t\tworld.addEntity(ship);\n\t\t\t\tcontroller.money[stationEid]--;\n\t\t\t}\n\t\t});\n\n\t\treturn ecs;\n\t};\n}","import { Types } from 'bitecs';\n\nexport default {\n\tx: Types.f32,\n\ty: Types.f32,\n\twidth: Types.f32,\n\theight: Types.f32,\n\tangle: Types.f32\n};","import { Types } from 'bitecs';\n\nexport default {\n\tcolor: Types.f32,\n\tmoney: Types.i32\n};","import { Types } from 'bitecs';\n\nexport default {\n\tx: Types.f32,\n\ty: Types.f32,\n\tspeed: Types.f32\n};","import { Types } from 'bitecs';\n\nexport default {\n\tshields: Types.i32,\n\tmaxShields: Types.i32,\n\ttimeToRegenerateShields: Types.f32,\n\ttimeSinceShieldRegeneration: Types.f32,\n\ttimeSinceTakenDamage: Types.f32,\n\tdead: Types.ui8\n};","import { Types } from 'bitecs';\n\nexport default {\n\towner: Types.eid\n};","import { Types } from 'bitecs';\n\nexport default {\n\ttarget: Types.eid\n};","import {\n\tdefineComponent\n} from 'bitecs';\nimport position from './position';\nimport controller from './controller';\nimport velocity from './velocity';\nimport health from './health';\nimport controlled from './controlled';\nimport attack from './attack';\n\nexport default {\n\tposition: defineComponent(position),\n\tcontroller: defineComponent(controller),\n\tvelocity: defineComponent(velocity),\n\thealth: defineComponent(health),\n\tcontrolled: defineComponent(controlled),\n\tattack: defineComponent(attack)\n};","import computeAngle from '@/math/compute-angle';\nimport { defineQuery, IWorld } from 'bitecs';\nimport World from '../entities/world';\n\nexport default function velocitySystem(world: World) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tlet shipQuery = defineQuery([position, velocity]);\n\n\treturn (ecs: IWorld, delta: number) => {\n\t\tlet ships = shipQuery(ecs);\n\t\tships.forEach(shipEid => {\n\t\t\tposition.x[shipEid] += velocity.x[shipEid] * delta;\n\t\t\tposition.y[shipEid] += velocity.y[shipEid] * delta;\n\n\t\t\t// TODO: Don't reference proxy world directly\n\t\t\tif(position.x[shipEid] < 0 || position.x[shipEid] > world.bounds.width) {\n\t\t\t\tvelocity.x[shipEid] = -velocity.x[shipEid];\n\t\t\t\tposition.angle[shipEid] = computeAngle(velocity.x[shipEid], velocity.y[shipEid]);\n\t\t\t}\n\t\n\t\t\tif(position.y[shipEid] < 0 || position.y[shipEid] > world.bounds.height) {\n\t\t\t\tvelocity.y[shipEid] = -velocity.y[shipEid];\n\t\t\t\tposition.angle[shipEid] = computeAngle(velocity.x[shipEid], velocity.y[shipEid]);\n\t\t\t}\n\t\t});\n\n\t\treturn ecs;\n\t};\n}","import { defineQuery, hasComponent, IWorld } from 'bitecs';\nimport World from '../entities/world';\nimport { Rectangle } from '@timohausmann/quadtree-ts/src/index.esm';\nimport distance from '@/math/distance';\nimport computeAngle from '@/math/compute-angle';\n\nexport default function collisionSystem(world: World) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tconst controlled = world.components.controlled;\n\tconst controller = world.components.controller;\n\tconst health = world.components.health;\n\tlet movingQuery = defineQuery([velocity]);\n\n\t// 60fps = 0.016 so 30fps is roughly 0.032 so basically every other frame\n\tconst TIME_BETWEEN_TICKS = 0.03;\n\tlet timeSinceLastTick = TIME_BETWEEN_TICKS + 1;\n\tlet ships: Array<number> = [];\n\tlet minCountToUpdate = 0;\n\treturn (ecs: IWorld, delta: number) => {\n\t\ttimeSinceLastTick += delta;\n\t\tif(timeSinceLastTick > TIME_BETWEEN_TICKS && ships.length === 0) {\n\t\t\tships = movingQuery(ecs).filter(eid => !health.dead[eid]);\n\t\t\tminCountToUpdate = ships.length / 2;\n\t\t\ttimeSinceLastTick = 0;\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tlet quadtree = ecs.quadtree;\n\t\tlet start = performance.now();\n\n\t\t// Use quadtree to see who we are colliding with\n\t\tfor(let i = 0; i < ships.length; i++) {\n\t\t\tlet eid = ships[i];\n\t\t\tlet entitiesInRange = quadtree.retrieve(new Rectangle({\n\t\t\t\tx: position.x[eid],\n\t\t\t\ty: position.y[eid],\n\t\t\t\twidth: position.width[eid],\n\t\t\t\theight: position.height[eid]\n\t\t\t})).map((result: any) => result.data.eid).filter((otherEid: number) => otherEid !== eid);\n\t\t\tlet shipColor = controller.color[controlled.owner[eid]];\n\t\t\tlet enemiesInRange = entitiesInRange.filter((otherEid: number) => {\n\t\t\t\t// Ship\n\t\t\t\tif(hasComponent(ecs, controlled, otherEid)) {\n\t\t\t\t\tlet stationEid = controlled.owner[otherEid];\n\t\t\t\t\treturn controller.color[stationEid] !== shipColor;\n\t\t\t\t}\n\t\t\t\t// Station\n\t\t\t\telse if(hasComponent(ecs, controller, otherEid)) {\n\t\t\t\t\treturn controller.color[otherEid] !== shipColor;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tlet collisions = enemiesInRange.filter((otherEid: number) => distance(position.x[otherEid], position.y[otherEid], position.x[eid], position.y[eid]) < Math.max(position.width[eid], position.width[otherEid]));\n\t\t\tif(collisions.length) {\n\t\t\t\tcollide(world, ships, eid, collisions[0]);\n\n\t\t\t\tvelocity.x[eid] = -velocity.x[eid];\n\t\t\t\tvelocity.y[eid] = -velocity.y[eid];\n\t\t\t\tposition.angle[eid] = computeAngle(velocity.x[eid], velocity.y[eid]);\n\t\t\t}\n\n\t\t\tif(i % 10 === 0 && i > minCountToUpdate) {\n\t\t\t\tif(performance.now() - start > (delta * 1_000 / 2)) {\n\t\t\t\t\tships = ships.slice(i);\n\t\t\t\t\treturn ecs;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tships = [];\n\t\treturn ecs;\n\t};\n}\n\nfunction collide(world: World, ships: Array<number>, eid: number, target: number) {\n\tif(!canTakeDamage(world, eid) || !canTakeDamage(world, target)) {\n\t\treturn;\n\t}\n\n\tlet enemyWorth = 1;\n\tif(hasComponent(world.ecs, world.components.controller, target)) {\n\t\tenemyWorth = ships.filter(eid => world.components.controlled.owner[eid] === target).length;\n\t}\n\n\ttakeDamage(world, ships, eid, 1);\n\ttakeDamage(world, ships, target, 1);\n\n\tconst controlled = world.components.controlled;\n\tif(world.components.health.dead[target]) {\n\t\tlet stationEid = controlled.owner[eid];\n\t\tworld.components.controller.money[stationEid] += enemyWorth;\n\t}\n\tif(world.components.health.dead[eid]) {\n\t\t// Ship\n\t\tif(hasComponent(world.ecs, controlled, target)) {\n\t\t\tlet stationEid = controlled.owner[target];\n\t\t\tworld.components.controller.money[stationEid] += 1;\n\t\t}\n\t\t// Station\n\t\telse if(hasComponent(world.ecs, world.components.controller, target)) {\n\t\t\tworld.components.controller.money[target] += 1;\n\t\t}\n\t}\n}\nfunction takeDamage(world: World, ships: Array<number>, eid: number, damage: number) {\n\tconst health = world.components.health;\n\thealth.shields[eid] -= damage;\n\thealth.timeSinceTakenDamage[eid] = 0;\n\tif(health.shields[eid] < 0) {\n\t\thealth.dead[eid] = 1;\n\n\t\t// TODO: Removing makes it so our change query doesn't detect that these are gone\n\t\t// world.removeEntity(eid);\n\t\tif(hasComponent(world.ecs, world.components.controller, eid)) {\n\t\t\tlet controlledShips = ships.filter(shipEid => world.components.controlled.owner[shipEid] === eid);\n\t\t\tcontrolledShips.forEach(shipEid => {\n\t\t\t\thealth.dead[shipEid] = 1;\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction canTakeDamage(world: World, eid: number) {\n\treturn world.components.health.timeSinceTakenDamage[eid] >= 0.2;\n}","import { defineQuery, hasComponent, IWorld } from 'bitecs';\nimport World from '../entities/world';\nimport { Rectangle } from '@timohausmann/quadtree-ts/src/index.esm';\nimport euclideanDistance from '@/math/euclidean-distance';\n\nexport default function targetEnemySystem(world: World) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tconst controlled = world.components.controlled;\n\tconst controller = world.components.controller;\n\tconst health = world.components.health;\n\tconst attack = world.components.attack;\n\tlet movingQuery = defineQuery([velocity, attack]);\n\tlet controllerQuery = defineQuery([controller]);\n\n\tconst TIME_BETWEEN_TICKS = 0.2;\n\tlet timeSinceLastTick = TIME_BETWEEN_TICKS + 1;\n\tlet movingEntities: Array<number> = [];\n\tlet minCountToUpdate = 0;\n\treturn (ecs: IWorld, delta: number) => {\n\t\t// Run through all of entities eventually, but don't have more than half a frame's time to do a block of them\n\t\ttimeSinceLastTick += delta;\n\t\tif(timeSinceLastTick > TIME_BETWEEN_TICKS && movingEntities.length === 0) {\n\t\t\tmovingEntities = movingQuery(ecs).filter(eid => !health.dead[eid]);\n\t\t\tminCountToUpdate = movingEntities.length / (TIME_BETWEEN_TICKS / delta);\n\t\t\ttimeSinceLastTick = 0;\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tlet quadtree = ecs.quadtree;\n\t\tlet start = performance.now();\n\n\t\t// Use quadtree to see who we are colliding with\n\t\tfor(let i = 0; i < movingEntities.length; i++) {\n\t\t\tlet eid = movingEntities[i];\n\t\t\tlet shipColor = controller.color[controlled.owner[eid]];\n\n\t\t\t// Try to find the nearest enemy\n\t\t\tlet rect = {\n\t\t\t\tx: position.x[eid] - 50,\n\t\t\t\ty: position.y[eid] - 50,\n\t\t\t\twidth: position.width[eid] + 100,\n\t\t\t\theight: position.height[eid] + 100\n\t\t\t};\n\t\t\tlet enemies = getEnemiesInRange(quadtree, ecs, rect, eid, shipColor, world);\n\t\t\tif(enemies.length === 0) {\n\t\t\t\trect.x -= 100;\n\t\t\t\trect.y -= 100;\n\t\t\t\trect.width += 200;\n\t\t\t\trect.height += 200;\n\t\t\t\tenemies = getEnemiesInRange(quadtree, ecs, rect, eid, shipColor, world);\n\t\t\t}\n\t\n\t\t\tenemies.sort((a, b) => {\n\t\t\t\treturn euclideanDistance(position.x[a], position.y[a], position.x[eid], position.y[eid]) - euclideanDistance(position.x[b], position.y[b], position.x[eid], position.y[eid]);\n\t\t\t});\n\t\t\tlet enemy = enemies[0] ?? 0;\n\n\t\t\t// If no enemies that quadtree could easily find, just head for the nearest station\n\t\t\tif(!enemy) {\n\t\t\t\tlet stations = controllerQuery(ecs).filter(stationEid => controller.color[stationEid] !== shipColor && !health.dead[stationEid]);\n\t\t\t\tstations.sort((a, b) => {\n\t\t\t\t\treturn euclideanDistance(position.x[a], position.y[a], position.x[eid], position.y[eid]) - euclideanDistance(position.x[b], position.y[b], position.x[eid], position.y[eid]);\n\t\t\t\t});\n\n\t\t\t\tenemy = stations[0] ?? 0;\n\t\t\t}\n\n\t\t\tattack.target[eid] = enemy;\n\n\t\t\tif(i % 10 === 0 && i > minCountToUpdate) {\n\t\t\t\t// Check how long we have been running for\n\t\t\t\tif(performance.now() - start > (delta * 1_000 / 2)) {\n\t\t\t\t\tmovingEntities = movingEntities.slice(i);\n\t\t\t\t\treturn ecs;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmovingEntities = [];\n\t\treturn ecs;\n\t};\n}\n\nfunction getEnemiesInRange(quadtree: any, ecs: IWorld, range: { x: number, y: number, width: number, height: number }, eid: number, shipColor: number, world: World) : Array<number> {\n\tconst controlled = world.components.controlled;\n\tconst controller = world.components.controller;\n\n\tlet entitiesInRange = quadtree.retrieve(new Rectangle(range)).map((result: any) => result.data.eid).filter((otherEid: number) => otherEid !== eid);\n\treturn entitiesInRange.filter((otherEid: number) => {\n\t\t// Ship\n\t\tif(hasComponent(ecs, controlled, otherEid)) {\n\t\t\tlet stationEid = controlled.owner[otherEid];\n\t\t\treturn controller.color[stationEid] !== shipColor;\n\t\t}\n\t\t// Station\n\t\telse if(hasComponent(ecs, controller, otherEid)) {\n\t\t\treturn controller.color[otherEid] !== shipColor;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\n}","import { defineQuery, IWorld } from 'bitecs';\nimport World from '../entities/world';\nimport { Quadtree, Rectangle } from '@timohausmann/quadtree-ts/src/index.esm';\n\nexport default function createQuadTreeSystem(world: World) {\n\tconst position = world.components.position;\n\tconst health = world.components.health;\n\tlet collidableQuery = defineQuery([position, health]);\n\n\treturn (ecs: IWorld) => {\n\t\t// Create and populate quadtree\n\t\tlet quadtree = new Quadtree({\n\t\t\twidth: world.bounds.width,\n\t\t\theight: world.bounds.height\n\t\t});\n\t\tcollidableQuery(ecs).forEach(eid => {\n\t\t\tif(health.dead[eid]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tquadtree.insert(new Rectangle({\n\t\t\t\tx: position.x[eid],\n\t\t\t\ty: position.y[eid],\n\t\t\t\twidth: position.width[eid],\n\t\t\t\theight: position.height[eid],\n\t\t\t\tdata: {\n\t\t\t\t\teid\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\n\t\t// @ts-expect-error\n\t\tecs.quadtree = quadtree;\n\n\t\treturn ecs;\n\t};\n}","import { defineQuery, IWorld } from 'bitecs';\nimport World from '../entities/world';\n\nexport default function updateHealthTimersSystem(world: World) {\n\tconst health = world.components.health;\n\tlet healthQuery = defineQuery([health]);\n\n\treturn (ecs: IWorld, delta: number) => {\n\t\thealthQuery(ecs).forEach(eid => {\n\t\t\thealth.timeSinceTakenDamage[eid] += delta;\n\n\t\t\tif(health.shields[eid] < health.maxShields[eid]) {\n\t\t\t\thealth.timeSinceShieldRegeneration[eid] += delta;\n\t\t\t\tif(health.timeSinceShieldRegeneration[eid] > health.timeToRegenerateShields[eid]) {\n\t\t\t\t\thealth.shields[eid]++;\n\t\t\t\t\thealth.timeSinceShieldRegeneration[eid] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn ecs;\n\t};\n}","import { defineQuery, IWorld } from 'bitecs';\nimport World from '../entities/world';\nimport computeAngle from '@/math/compute-angle';\nconst PhaserMath = require('phaser/src/math');\n\nexport default function moveToTargetSystem(world: World) {\n\tconst position = world.components.position;\n\tconst velocity = world.components.velocity;\n\tconst attack = world.components.attack;\n\tconst health = world.components.health;\n\tlet movingQuery = defineQuery([velocity, attack]);\n\n\treturn (ecs: IWorld) => {\n\t\tmovingQuery(ecs).forEach(eid => {\n\t\t\tlet target = attack.target[eid];\n\t\t\tif(!target || health.dead[target]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet force = getMoveTowardsForce(position, eid, target);\n\t\t\tlet newVelocity = new PhaserMath.Vector2(velocity.x[eid] + force.x * 4, velocity.y[eid] + force.y * 4);\n\t\t\tnewVelocity.normalize();\n\n\t\t\tvelocity.x[eid] = newVelocity.x * velocity.speed[eid];\n\t\t\tvelocity.y[eid] = newVelocity.y * velocity.speed[eid];\n\t\t\tposition.angle[eid] = computeAngle(velocity.x[eid], velocity.y[eid]);\n\t\t});\n\n\t\treturn ecs;\n\t};\n}\n\nfunction getMoveTowardsForce(position: any, eid: number, otherEid: number) {\n\tlet force = new PhaserMath.Vector2(position.x[otherEid] - position.x[eid], position.y[otherEid] - position.y[eid]);\n\tforce.normalize();\n\treturn force;\n}","import {\n\tcreateWorld,\n\tIWorld,\n\tremoveEntity\n} from 'bitecs';\nimport Entity from './entity';\nimport { EventEmitter } from 'eventemitter3';\nimport Station from './station';\nimport spawnShipSystem from '../systems/spawn-ship-system';\nimport components from '../components';\nimport velocitySystem from '../systems/velocity-system';\nimport collisionSystem from '../systems/collision-system';\nimport targetEnemySystem from '../systems/target-enemy-system';\nimport createQuadTreeSystem from '../systems/create-quad-tree-system';\nimport updateHealthTimersSystem from '../systems/update-health-timers-system';\nimport moveToTargetSystem from '../systems/move-to-target-system';\n\nexport default class World extends EventEmitter {\n\tecs: IWorld;\n\teidMap: Map<number, Entity> = new Map();\n\tbounds: {\n\t\twidth: number,\n\t\theight: number\n\t} = { width: 0, height: 0 };\n\tcomponents = components;\n\tsystems: Array<(world: IWorld, delta: number) => IWorld> = [];\n\tsystemUpdates: { [s: string]: Array<number> } = {};\n\n\tget entities() { return [...this.eidMap.values()]; }\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.ecs = createWorld();\n\n\t\tthis.addSystem('quadTreeSystem', createQuadTreeSystem(this));\n\t\tthis.addSystem('spawnShipSystem', spawnShipSystem(this));\n\t\tthis.addSystem('targetEnemySystem', targetEnemySystem(this));\n\t\tthis.addSystem('moveToTargetSystem', moveToTargetSystem(this));\n\t\tthis.addSystem('velocitySystem', velocitySystem(this));\n\t\tthis.addSystem('collisionSystem', collisionSystem(this));\n\t\tthis.addSystem('updateHealthTimersSystem', updateHealthTimersSystem(this));\n\t}\n\n\tload(config: any) {\n\t\tconfig.entities.forEach((entityConfig: any) => {\n\t\t\tlet entity;\n\t\t\tswitch(entityConfig.type) {\n\t\t\t\tcase 'station':\n\t\t\t\t\tentity = new Station(this);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tentity = new Entity(this);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tentity.load(entityConfig);\n\t\t\tthis.addEntity(entity);\n\t\t});\n\n\t\tif(config.bounds) {\n\t\t\tthis.bounds = config.bounds;\n\t\t}\n\t}\n\taddEntity(entity: Entity) {\n\t\tthis.emit('entity-added', entity);\n\t\tthis.eidMap.set(entity.eid, entity);\n\t}\n\tremoveEntity(eid: number) {\n\t\tremoveEntity(this.ecs, eid);\n\t\tthis.eidMap.delete(eid);\n\t}\n\tgetEntity(eid: number) {\n\t\treturn this.eidMap.get(eid) ?? null;\n\t}\n\n\tupdate(delta: number) {\n\t\tthis.systems.forEach(system => {\n\t\t\tsystem(this.ecs, delta);\n\t\t});\n\t}\n\n\taddSystem(name: string, update: (world: IWorld, delta: number) => void) {\n\t\tthis.systems.push((world: IWorld, delta: number) => {\n\t\t\tlet start = performance.now();\n\t\t\tupdate(world, delta);\n\t\t\tthis.systemUpdates[name].push(performance.now() - start);\n\n\t\t\treturn world;\n\t\t});\n\t\tthis.systemUpdates[name] = [];\n\t}\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e495fc6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"home\" }\nconst _hoisted_2 = { class: \"list\" }\nconst _hoisted_3 = { style: {\"color\":\"red\"} }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, null, -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"phaser-container-bitecs\" }, null, -1))\n\nimport { ref, onMounted, onBeforeUnmount, Ref } from 'vue';\nimport Phaser from 'phaser';\nimport generateScene from '@/data/generate-scene';\nimport World from './entities/world';\nimport Entity from './entities/entity';\nimport Station from './entities/station';\nimport Ship from './entities/ship';\nimport { Changed, defineQuery } from 'bitecs';\nimport components from './components';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\nlet world = new World();\nconst minUpdateTime = ref(0);\nconst maxUpdateTime = ref(0);\nconst avgUpdateTime = ref(0);\nconst stationsCount = ref(0);\nconst shipsCount = ref(0);\nconst stationShips = ref([]) as Ref<Array<{ eid: number, color: number, displayColor: string, ships: number }>>;\nconst stationQuery = defineQuery([components.controller]);\nconst systemUpdates = ref([]) as Ref<Array<{ name: string, min: number, avg: number, max: number }>>;\n\nlet game: Phaser.Game | null;\nonMounted(() => {\n\tlet updateTicks = 0;\n\tlet updateTimes: Array<number> = [];\n\n\tconst width = window.innerWidth / 3 * 2;\n\tconst height = window.innerHeight / 3 * 2;\n\tlet paused = false;\n\tconst changedPositionQuery = defineQuery([ Changed(components.position) ]);\n\tconst changedHealthQuery = defineQuery([ Changed(components.health) ]);\n\tconst controlledQuery = defineQuery([components.controlled]);\n\tconst eidSpriteMap = new Map<number, any>();\n\tgame = new Phaser.Game({\n\t\ttype: Phaser.AUTO,\n\t\twidth,\n\t\theight,\n\t\tparent: 'phaser-container-bitecs',\n\t\t// @ts-expect-error\n\t\tscene: {\n\t\t\tpreload() {\n\t\t\t\tthis.load.image('boid', 'boid.png');\n\t\t\t\tthis.load.image('station', 'station.png');\n\t\t\t\tthis.load.image('shield', 'shield3.png');\n\t\t\t},\n\t\t\tcreate() {\n\t\t\t\tworld.on('entity-added', (entity: Entity) => {\n\t\t\t\t\tlet image = this.add.image(entity.x, entity.y, entity.key) as any;\n\t\t\t\t\timage.setScale(entity.width / image.width, entity.height / image.height);\n\t\t\t\t\timage.shieldImage = this.add.image(entity.x, entity.y, 'shield');\n\t\t\t\t\timage.shieldImage.setScale(entity.width / image.shieldImage.width * 2, entity.height / image.shieldImage.height * 2);\n\t\t\t\t\timage.shieldImage.visible = entity.shields > 0;\n\t\t\t\t\tif(entity instanceof Station || entity instanceof Ship) {\n\t\t\t\t\t\timage.setTint(entity.color);\n\t\t\t\t\t}\n\t\t\t\t\teidSpriteMap.set(entity.eid, image);\n\t\t\t\t});\n\n\t\t\t\tworld.load(generateScene({\n\t\t\t\t\tstations: 6,\n\t\t\t\t\tshipsPerStation: 100,\n\t\t\t\t\twidth,\n\t\t\t\t\theight\n\t\t\t\t}));\n\n\t\t\t\tlet stations = world.entities.filter(entity => entity instanceof Station) as Array<Station>;\n\t\t\t\tstationShips.value = stations.map(station => {\n\t\t\t\t\tlet displayColor = '#' + station.color.toString(16);\n\t\t\t\t\tif(displayColor === '#ffffff') {\n\t\t\t\t\t\tdisplayColor = '#00000';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\teid: station.eid,\n\t\t\t\t\t\tcolor: station.color,\n\t\t\t\t\t\tdisplayColor,\n\t\t\t\t\t\tships: 0\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tthis.input.keyboard.on('keydown-SPACE', () => {\n\t\t\t\t\tpaused = !paused;\n\t\t\t\t});\n\n\t\t\t\tObject.keys(world.systemUpdates).forEach(systemName => {\n\t\t\t\t\tsystemUpdates.value.push({\n\t\t\t\t\t\tname: systemName,\n\t\t\t\t\t\tmin:0,\n\t\t\t\t\t\tavg: 0,\n\t\t\t\t\t\tmax: 0\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\t\t\tupdate(time: number, delta: number) {\n\t\t\t\tif(paused) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet start = performance.now();\n\t\t\t\tworld.update(delta / 1_000);\n\n\t\t\t\tchangedPositionQuery(world.ecs).forEach(eid => {\n\t\t\t\t\tlet image = eidSpriteMap.get(eid);\n\t\t\t\t\tif(!image) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\timage.x = image.shieldImage.x = components.position.x[eid];\n\t\t\t\t\timage.y = image.shieldImage.y = components.position.y[eid];\n\t\t\t\t\timage.angle = image.shieldImage.angle = components.position.angle[eid];\n\t\t\t\t});\n\t\t\t\tchangedHealthQuery(world.ecs).forEach(eid => {\n\t\t\t\t\tlet image = eidSpriteMap.get(eid);\n\t\t\t\t\tif(!image) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\timage.shieldImage.visible = components.health.shields[eid] > 0;\n\t\t\t\t\tif(components.health.dead[eid]) {\n\t\t\t\t\t\timage.destroy();\n\t\t\t\t\t\timage.shieldImage.destroy();\n\t\t\t\t\t\teidSpriteMap.delete(eid);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tlet end = performance.now();\n\n\t\t\t\tupdateTimes.push(end - start);\n\t\t\t\tupdateTicks += delta;\n\t\t\t\tif(updateTicks > 1_000) {\n\t\t\t\t\tminUpdateTime.value = updateTimes.reduce((min, time) => {\n\t\t\t\t\t\treturn Math.min(min, time);\n\t\t\t\t\t}, 1_000_000);\n\t\t\t\t\tmaxUpdateTime.value = updateTimes.reduce((max, time) => {\n\t\t\t\t\t\treturn Math.max(max, time);\n\t\t\t\t\t}, 0);\n\t\t\t\t\tavgUpdateTime.value = updateTimes.reduce((total, time) => {\n\t\t\t\t\t\treturn total + time;\n\t\t\t\t\t}, 0) / updateTimes.length;\n\t\t\t\t\tupdateTimes = [];\n\t\t\t\t\tupdateTicks = 0;\n\n\t\t\t\t\tstationsCount.value = world.entities.filter(entity => entity instanceof Station).length;\n\n\t\t\t\t\tlet stations = stationQuery(world.ecs).filter(eid => !components.health.dead[eid]);\n\t\t\t\t\tlet ships = controlledQuery(world.ecs).filter(eid => !components.health.dead[eid]);\n\t\t\t\t\tshipsCount.value = ships.length;\n\t\t\t\t\tstationShips.value.forEach(val => {\n\t\t\t\t\t\tlet matchingStationEid = stations.find(eid => components.controller.color[eid] === val.color);\n\t\t\t\t\t\tif(matchingStationEid !== undefined) {\n\t\t\t\t\t\t\tval.ships = ships.filter(eid => components.controlled.owner[eid] === val.eid).length;\n\t\t\t\t\t\t} else if(val.ships > 0) {\n\t\t\t\t\t\t\t// paused = true;\n\t\t\t\t\t\t\tval.ships = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tsystemUpdates.value = [];\n\t\t\t\t\tObject.keys(world.systemUpdates).forEach(systemName => {\n\t\t\t\t\t\tlet updates = world.systemUpdates[systemName];\n\n\t\t\t\t\t\tsystemUpdates.value.push({\n\t\t\t\t\t\t\tname: systemName,\n\t\t\t\t\t\t\tmin: updates.reduce((min, time) => {\n\t\t\t\t\t\t\t\treturn Math.min(min, time);\n\t\t\t\t\t\t\t}, 1_000_000),\n\t\t\t\t\t\t\tavg: updates.reduce((total, time) => {\n\t\t\t\t\t\t\t\treturn total + time;\n\t\t\t\t\t\t\t}, 0) / updates.length,\n\t\t\t\t\t\t\tmax: updates.reduce((max, time) => {\n\t\t\t\t\t\t\t\treturn Math.max(max, time);\n\t\t\t\t\t\t\t}, 0)\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tworld.systemUpdates[systemName] = [];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\nonBeforeUnmount(() => {\n\tif(game) {\n\t\tgame.destroy();\n\t\tgame = null;\n\t} \n});\n\nfunction addShips() {\n\tstationQuery(world.ecs).forEach(eid => {\n\t\tworld.components.controller.money[eid] += 10;\n\t});\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, \"mainThread: \" + _toDisplayString(maxUpdateTime.value.toFixed(2)) + \" (\" + _toDisplayString(avgUpdateTime.value.toFixed(2)) + \" avg) ms\", 1),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(systemUpdates), (system) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: system.name\n        }, _toDisplayString(system.name) + \": \" + _toDisplayString(system.max.toFixed(2)) + \" (\" + _toDisplayString(system.avg.toFixed(2)) + \" avg) ms\", 1))\n      }), 128)),\n      _hoisted_4,\n      _createElementVNode(\"div\", null, \"Entities: \" + _toDisplayString(stationsCount.value) + \" stations and \" + _toDisplayString(shipsCount.value) + \" ships\", 1),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stationShips), (station) => {\n        return (_openBlock(), _createElementBlock(\"span\", {\n          class: \"station-list\",\n          key: station.color,\n          style: _normalizeStyle({ color: station.displayColor })\n        }, _toDisplayString('#' + station.color.toString(16)) + \": \" + _toDisplayString(station.ships), 5))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"button\", { onClick: addShips }, \"Add Ships\")\n      ])\n    ]),\n    _hoisted_5\n  ]))\n}\n}\n\n})","export { default } from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./BitECSGame.vue?vue&type=script&setup=true&lang=ts\"; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??clonedRuleSet-41.use[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./BitECSGame.vue?vue&type=script&setup=true&lang=ts\"","// extracted by mini-css-extract-plugin\nexport {};","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??clonedRuleSet-12.use[0]!../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../node_modules/vue-loader/dist/stylePostLoader.js!../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./BitECSGame.vue?vue&type=style&index=0&id=4e495fc6&scoped=true&lang=css\"","import script from \"./BitECSGame.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./BitECSGame.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./BitECSGame.vue?vue&type=style&index=0&id=4e495fc6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ecs-arraybuffer/ecs-arraybuffer/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e495fc6\"]])\n\nexport default __exports__"],"names":["TYPES_ENUM","i8","ui8","ui8c","i16","ui16","i32","ui32","f32","f64","eid","TYPES_NAMES","TYPES","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","UNSIGNED_MAX","uint8","uint16","uint32","roundToMultiple","mul","x","Math","ceil","roundToMultiple4","$storeRef","Symbol","$storeSize","$storeMaps","$storeFlattened","$storeBase","$storeType","$storeArrayElementCounts","$storeSubarrays","$subarrayCursors","$subarray","$subarrayFrom","$subarrayTo","$parentArray","$tagStore","$queryShadow","$serializeShadow","$indexType","$indexBytes","$isEidType","stores","resize","ta","size","newBuffer","ArrayBuffer","BYTES_PER_ELEMENT","newTa","constructor","set","createShadow","store","key","isView","shadowStore","slice","map","_","length","start","end","subarray","resizeSubarray","metadata","storeSize","cursors","type","indexType","arrayElementCount","array","start2","end2","resizeRecursive","Object","keys","forEach","Array","isArray","push","resizeStore","k","resetStoreFor","fill","createTypeStore","totalBytes","buffer","parentArray","createArrayStore","Error","isArrayType","createStore","schema","$store","JSON","parse","stringify","arrayElementCounts","collectArrayElementCounts","s","reduce","a","recursiveTransform","assign","SparseSet","dense","sparse","sort","comparator","result","prototype","call","i","has","val","add","remove","index","swapped","pop","DESERIALIZE_MODE","REPLACE","APPEND","MAP","resized","setSerializationResized","v","concat","not","fn","storeFlattened","c","isFullComponent","isProperty","isModifier","isNotModifier","isChangedModifier","isWorld","w","getOwnPropertySymbols","includes","$componentMap","fromModifierToComponent","canonicalize","target","Map","fullComponentProps","filter","changedComponentProps","props","changedProps","componentProps","allChangedProps","prop","$","defineSerializer","maxBytes","worldSerializer","view","DataView","entityComponentCache","ents","component","world","$entityArray","eidToWorld","get","where","cache","pid","$diff","shadow","setUint8","countWhere","writeCount","componentCache","Set","newlyAddedComponent","hasComponent","delete","rewindWhere","setUint32","name","replace","indexBytes","countWhere2","arrayWriteCount","i2","changed","value","newEntities","defineDeserializer","isWorld2","deserializedEntities","packet","mode","clear","localEntities","$localEntities","localEntityLookup","$localEntityLookup","byteLength","getUint8","entityCount","getUint32","newEid","addEntity","$entitySparseSet","addComponent","count","localEid","from","$entityMasks","$entityComponents","$entityIndices","$removedEntities","defaultSize","globalEntityCursor","globalSize","resizeThreshold","getGlobalSize","removed","resetGlobals","setDefaultSize","newSize","oldSize","resizeWorlds","resizeComponents","console","info","getEntityCursor","amount","round","shift","$notQueries","q","match","queryCheckEntity","queryAddEntity","removeEntity","$queries","queryRemoveEntity","getEntityComponents","entityExists","comps","$queryAny","$queryAll","$queryNone","$queryMap","$dirtyQueries","$queryComponents","$enterQuery","$exitQuery","enterQuery","query","registerQuery","entered","exitQuery","exited","components2","notComponents","changedComponents","comp","mod","registerComponent","mapComponents","allComponents","sparseSet","archetypes","toRemove","generations","generationId","reduceBitflags","bitflag","masks","notMasks","hasMasks","flatProps","shadows","components","queries","generateShadow","diff","clearDiff","dirty","flatten","aggregateComponentsFor","f","getAnyComponents","Any","getAllComponents","All","getNoneComponents","None","defineQuery","args","any","all","none","commitRemovals","or","qMask","qNotMask","eMask","queryCommitRemovals","resetChangedQuery","removeQuery","defineComponent","incrementBitflag","$bitflag","$size","notQueries","changedQueries","registerComponents","registeredComponent","mask","reset","removeComponent","$resizeThreshold","$archetypes","worlds","createWorld","resetWorld","deleteWorld","splice","indexOf","getWorldComponents","defineSystem","update","pipe","fns","input","tmp","Types","EventEmitter","Entity","position","y","width","height","shields","health","maxShields","timeToRegenerateShields","timeSinceShieldRegeneration","timeSinceTakenDamage","dead","ecs","load","config","Station","color","controller","money","Ship","controlled","owner","velocityX","velocity","velocityY","station","getEntity","attack","speed","computeAngle","spawnShipSystem","stationQuery","stations","stationEid","ship","random","angle","velocitySystem","shipQuery","delta","ships","shipEid","bounds","Rectangle","distance","collisionSystem","movingQuery","TIME_BETWEEN_TICKS","timeSinceLastTick","minCountToUpdate","quadtree","performance","now","entitiesInRange","retrieve","data","otherEid","shipColor","enemiesInRange","collisions","max","collide","canTakeDamage","enemyWorth","takeDamage","damage","controlledShips","euclideanDistance","targetEnemySystem","controllerQuery","movingEntities","rect","enemies","getEnemiesInRange","b","enemy","range","Quadtree","createQuadTreeSystem","collidableQuery","insert","updateHealthTimersSystem","healthQuery","PhaserMath","require","moveToTargetSystem","force","getMoveTowardsForce","newVelocity","Vector2","normalize","World","entities","eidMap","values","addSystem","entityConfig","entity","emit","systems","system","systemUpdates","_defineComponent","toDisplayString","_toDisplayString","createElementVNode","_createElementVNode","unref","_unref","renderList","_renderList","Fragment","_Fragment","openBlock","_openBlock","createElementBlock","_createElementBlock","normalizeStyle","_normalizeStyle","pushScopeId","_pushScopeId","popScopeId","_popScopeId","_withScopeId","n","_hoisted_1","class","_hoisted_2","_hoisted_3","style","_hoisted_4","_hoisted_5","id","ref","onMounted","onBeforeUnmount","Phaser","generateScene","Changed","setup","__props","minUpdateTime","maxUpdateTime","avgUpdateTime","stationsCount","shipsCount","stationShips","game","updateTicks","updateTimes","window","innerWidth","innerHeight","paused","changedPositionQuery","changedHealthQuery","controlledQuery","eidSpriteMap","Game","AUTO","parent","scene","preload","image","create","on","setScale","shieldImage","visible","setTint","shipsPerStation","displayColor","toString","keyboard","systemName","min","avg","time","destroy","total","matchingStationEid","find","undefined","updates","addShips","_ctx","_cache","toFixed","onClick"],"sourceRoot":""}